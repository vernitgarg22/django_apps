# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2018-08-16 20:35
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Affiliates',
            fields=[
                ('affiliateid', models.AutoField(db_column='AffiliateId', primary_key=True, serialize=False)),
                ('startdate', models.DateTimeField(blank=True, db_column='StartDate', null=True)),
                ('enddate', models.DateTimeField(blank=True, db_column='EndDate', null=True)),
                ('cpc', models.FloatField(db_column='CPC')),
                ('clicks', models.IntegerField(db_column='Clicks')),
                ('cpa', models.FloatField(db_column='CPA')),
                ('acquisitions', models.IntegerField(db_column='Acquisitions')),
            ],
            options={
                'db_table': 'Affiliates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsEventdata',
            fields=[
                ('eventdataid', models.BigAutoField(db_column='EventDataId', primary_key=True, serialize=False)),
                ('pageviewid', models.BigIntegerField(db_column='PageViewId')),
                ('visitorid', models.CharField(db_column='VisitorId', max_length=36)),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('tabid', models.IntegerField(db_column='TabId')),
                ('userid', models.IntegerField(db_column='UserId')),
                ('portalaliasid', models.IntegerField(db_column='PortalAliasId')),
                ('eventcategory', models.CharField(db_column='EventCategory', max_length=256)),
                ('eventname', models.CharField(db_column='EventName', max_length=256)),
                ('eventaction', models.CharField(db_column='EventAction', max_length=256)),
                ('eventvalue', models.CharField(db_column='EventValue', max_length=2000)),
                ('eventdate', models.DateTimeField(db_column='EventDate')),
                ('contentitemid', models.IntegerField(db_column='ContentItemId')),
                ('dateid', models.IntegerField(db_column='DateId')),
            ],
            options={
                'db_table': 'Analytics_EventData',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsFactConversions',
            fields=[
                ('factid', models.AutoField(db_column='FactId', primary_key=True, serialize=False)),
                ('dateid', models.IntegerField(db_column='DateId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('pageid', models.IntegerField(db_column='PageId')),
                ('eventname', models.CharField(db_column='EventName', max_length=200)),
                ('eventvalue', models.CharField(db_column='EventValue', max_length=200)),
                ('eventcount', models.IntegerField(db_column='EventCount')),
                ('contentitemid', models.IntegerField(db_column='ContentItemId')),
            ],
            options={
                'db_table': 'Analytics_Fact_Conversions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsFactDevices',
            fields=[
                ('factid', models.AutoField(db_column='FactId', primary_key=True, serialize=False)),
                ('dateid', models.IntegerField(db_column='DateId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('pageid', models.IntegerField(db_column='PageId')),
                ('device', models.IntegerField(db_column='Device')),
                ('operatingsystem', models.CharField(db_column='OperatingSystem', max_length=200)),
                ('pageviews', models.IntegerField(db_column='PageViews')),
                ('contentitemid', models.IntegerField(db_column='ContentItemId')),
            ],
            options={
                'db_table': 'Analytics_Fact_Devices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsFactExitpages',
            fields=[
                ('factid', models.AutoField(db_column='FactId', primary_key=True, serialize=False)),
                ('dateid', models.IntegerField(db_column='DateId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('pageid', models.IntegerField(db_column='PageId')),
                ('exitpage', models.CharField(db_column='ExitPage', max_length=200)),
                ('pageviews', models.IntegerField(db_column='PageViews')),
                ('contentitemid', models.IntegerField(db_column='ContentItemId')),
                ('exitpageid', models.IntegerField(db_column='ExitPageId')),
                ('exitpagecontentitemid', models.IntegerField(db_column='ExitPageContentItemId')),
            ],
            options={
                'db_table': 'Analytics_Fact_ExitPages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsFactLinkclicked',
            fields=[
                ('factid', models.AutoField(db_column='FactId', primary_key=True, serialize=False)),
                ('dateid', models.IntegerField(db_column='DateId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('pageid', models.IntegerField(db_column='PageId')),
                ('link', models.CharField(db_column='Link', max_length=2000)),
                ('linkcount', models.IntegerField(db_column='LinkCount')),
                ('userid', models.IntegerField(db_column='UserId')),
                ('visitorid', models.CharField(db_column='VisitorId', max_length=36)),
                ('contentitemid', models.IntegerField(db_column='ContentItemId')),
            ],
            options={
                'db_table': 'Analytics_Fact_LinkClicked',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsFactPageviews',
            fields=[
                ('factid', models.AutoField(db_column='FactId', primary_key=True, serialize=False)),
                ('dateid', models.IntegerField(db_column='DateId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('pageid', models.IntegerField(db_column='PageId')),
                ('pagename', models.CharField(db_column='PageName', max_length=200)),
                ('pageviews', models.IntegerField(db_column='PageViews')),
                ('timeonpage', models.IntegerField(db_column='TimeOnPage')),
                ('contentitemid', models.IntegerField(db_column='ContentItemId')),
            ],
            options={
                'db_table': 'Analytics_Fact_PageViews',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsFactReferrers',
            fields=[
                ('factid', models.AutoField(db_column='FactId', primary_key=True, serialize=False)),
                ('dateid', models.IntegerField(db_column='DateId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('pageid', models.IntegerField(db_column='PageId')),
                ('channel', models.IntegerField(db_column='Channel')),
                ('referrerhost', models.CharField(db_column='ReferrerHost', max_length=200)),
                ('referrerdetail', models.CharField(db_column='ReferrerDetail', max_length=200)),
                ('referrerpageid', models.IntegerField(db_column='ReferrerPageId')),
                ('pageviews', models.IntegerField(db_column='PageViews')),
                ('contentitemid', models.IntegerField(db_column='ContentItemId')),
                ('contentitemreferrerid', models.IntegerField(db_column='ContentItemReferrerId')),
            ],
            options={
                'db_table': 'Analytics_Fact_Referrers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsFactSessions',
            fields=[
                ('factid', models.AutoField(db_column='FactId', primary_key=True, serialize=False)),
                ('dateid', models.IntegerField(db_column='DateId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('sessionguid', models.CharField(db_column='SessionGuid', max_length=36)),
                ('pageid', models.IntegerField(db_column='PageId')),
                ('pageviews', models.IntegerField(db_column='PageViews')),
                ('timeonpage', models.IntegerField(db_column='TimeOnPage')),
                ('contentitemid', models.IntegerField(db_column='ContentItemId')),
            ],
            options={
                'db_table': 'Analytics_Fact_Sessions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsFactUsers',
            fields=[
                ('factid', models.AutoField(db_column='FactId', primary_key=True, serialize=False)),
                ('dateid', models.IntegerField(db_column='DateId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('userid', models.IntegerField(db_column='UserId')),
                ('pageid', models.IntegerField(db_column='PageId')),
                ('pageviews', models.IntegerField(db_column='PageViews')),
                ('timeonpage', models.IntegerField(db_column='TimeOnPage')),
                ('contentitemid', models.IntegerField(db_column='ContentItemId')),
            ],
            options={
                'db_table': 'Analytics_Fact_Users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsFactVisitors',
            fields=[
                ('factid', models.AutoField(db_column='FactId', primary_key=True, serialize=False)),
                ('dateid', models.IntegerField(db_column='DateId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('visitorguid', models.CharField(db_column='VisitorGuid', max_length=36)),
                ('pageid', models.IntegerField(db_column='PageId')),
                ('pageviews', models.IntegerField(db_column='PageViews')),
                ('timeonpage', models.IntegerField(db_column='TimeOnPage')),
                ('contentitemid', models.IntegerField(db_column='ContentItemId')),
            ],
            options={
                'db_table': 'Analytics_Fact_Visitors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsPageviews',
            fields=[
                ('pageviewid', models.BigAutoField(db_column='PageViewId', primary_key=True, serialize=False)),
                ('dateid', models.IntegerField(db_column='DateId')),
                ('visitorguid', models.CharField(db_column='VisitorGuid', max_length=36)),
                ('sessionguid', models.CharField(db_column='SessionGuid', max_length=36)),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('tabid', models.IntegerField(db_column='TabId')),
                ('userid', models.IntegerField(db_column='UserId')),
                ('device', models.IntegerField(db_column='Device')),
                ('operatingsystem', models.CharField(db_column='OperatingSystem', max_length=200)),
                ('channel', models.IntegerField(db_column='Channel')),
                ('referrerhost', models.CharField(db_column='ReferrerHost', max_length=200)),
                ('referrerdetail', models.CharField(db_column='ReferrerDetail', max_length=200)),
                ('referrerpageid', models.IntegerField(db_column='ReferrerPageId')),
                ('exitpage', models.CharField(db_column='ExitPage', max_length=200)),
                ('totalseconds', models.IntegerField(db_column='TotalSeconds')),
                ('useragent', models.CharField(db_column='UserAgent', max_length=200)),
                ('pagelanguage', models.CharField(db_column='PageLanguage', max_length=10)),
                ('ipaddress', models.CharField(db_column='IPAddress', max_length=50)),
                ('urlquery', models.CharField(db_column='UrlQuery', max_length=200)),
                ('contentitemid', models.IntegerField(db_column='ContentItemId')),
                ('contentitemreferrerid', models.IntegerField(db_column='ContentItemReferrerId')),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
            ],
            options={
                'db_table': 'Analytics_PageViews',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Announcements',
            fields=[
                ('itemid', models.AutoField(db_column='ItemID', primary_key=True, serialize=False)),
                ('createddate', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=150, null=True)),
                ('url', models.CharField(blank=True, db_column='URL', max_length=250, null=True)),
                ('expiredate', models.DateTimeField(blank=True, db_column='ExpireDate', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('vieworder', models.IntegerField(blank=True, db_column='ViewOrder', null=True)),
                ('createdbyuser', models.IntegerField(db_column='CreatedByUser')),
                ('publishdate', models.DateTimeField(blank=True, db_column='PublishDate', null=True)),
                ('imagesource', models.CharField(blank=True, db_column='ImageSource', max_length=250, null=True)),
            ],
            options={
                'db_table': 'Announcements',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Anonymoususers',
            fields=[
                ('userid', models.CharField(db_column='UserID', max_length=36, primary_key=True, serialize=False)),
                ('tabid', models.IntegerField(db_column='TabID')),
                ('creationdate', models.DateTimeField(db_column='CreationDate')),
                ('lastactivedate', models.DateTimeField(db_column='LastActiveDate')),
            ],
            options={
                'db_table': 'AnonymousUsers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AspnetApplications',
            fields=[
                ('applicationname', models.CharField(db_column='ApplicationName', max_length=256, unique=True)),
                ('loweredapplicationname', models.CharField(db_column='LoweredApplicationName', max_length=256, unique=True)),
                ('applicationid', models.CharField(db_column='ApplicationId', max_length=36, primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=256, null=True)),
            ],
            options={
                'db_table': 'aspnet_Applications',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AspnetSchemaversions',
            fields=[
                ('feature', models.CharField(db_column='Feature', max_length=128, primary_key=True, serialize=False)),
                ('compatibleschemaversion', models.CharField(db_column='CompatibleSchemaVersion', max_length=128)),
                ('iscurrentversion', models.BooleanField(db_column='IsCurrentVersion')),
            ],
            options={
                'db_table': 'aspnet_SchemaVersions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AspnetUsers',
            fields=[
                ('userid', models.CharField(db_column='UserId', max_length=36, primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='UserName', max_length=256)),
                ('loweredusername', models.CharField(db_column='LoweredUserName', max_length=256)),
                ('mobilealias', models.CharField(blank=True, db_column='MobileAlias', max_length=16, null=True)),
                ('isanonymous', models.BooleanField(db_column='IsAnonymous')),
                ('lastactivitydate', models.DateTimeField(db_column='LastActivityDate')),
            ],
            options={
                'db_table': 'aspnet_Users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Assemblies',
            fields=[
                ('assemblyid', models.AutoField(db_column='AssemblyID', primary_key=True, serialize=False)),
                ('assemblyname', models.CharField(db_column='AssemblyName', max_length=250)),
                ('version', models.CharField(db_column='Version', max_length=20)),
            ],
            options={
                'db_table': 'Assemblies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Authentication',
            fields=[
                ('authenticationid', models.AutoField(db_column='AuthenticationID', primary_key=True, serialize=False)),
                ('authenticationtype', models.CharField(db_column='AuthenticationType', max_length=100)),
                ('isenabled', models.BooleanField(db_column='IsEnabled')),
                ('settingscontrolsrc', models.CharField(db_column='SettingsControlSrc', max_length=250)),
                ('logincontrolsrc', models.CharField(db_column='LoginControlSrc', max_length=250)),
                ('logoffcontrolsrc', models.CharField(db_column='LogoffControlSrc', max_length=250)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'Authentication',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Banners',
            fields=[
                ('bannerid', models.AutoField(db_column='BannerId', primary_key=True, serialize=False)),
                ('imagefile', models.CharField(blank=True, db_column='ImageFile', max_length=100, null=True)),
                ('bannername', models.CharField(db_column='BannerName', max_length=100)),
                ('impressions', models.IntegerField(db_column='Impressions')),
                ('cpm', models.FloatField(db_column='CPM')),
                ('views', models.IntegerField(db_column='Views')),
                ('clickthroughs', models.IntegerField(db_column='ClickThroughs')),
                ('startdate', models.DateTimeField(blank=True, db_column='StartDate', null=True)),
                ('enddate', models.DateTimeField(blank=True, db_column='EndDate', null=True)),
                ('createdbyuser', models.CharField(db_column='CreatedByUser', max_length=100)),
                ('createddate', models.DateTimeField(db_column='CreatedDate')),
                ('bannertypeid', models.IntegerField(blank=True, db_column='BannerTypeId', null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=2000, null=True)),
                ('groupname', models.CharField(blank=True, db_column='GroupName', max_length=100, null=True)),
                ('criteria', models.BooleanField(db_column='Criteria')),
                ('url', models.CharField(blank=True, db_column='URL', max_length=255, null=True)),
                ('width', models.IntegerField(db_column='Width')),
                ('height', models.IntegerField(db_column='Height')),
            ],
            options={
                'db_table': 'Banners',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CkeSettings',
            fields=[
                ('settingname', models.CharField(db_column='SettingName', max_length=300, primary_key=True, serialize=False)),
                ('settingvalue', models.TextField(db_column='SettingValue')),
            ],
            options={
                'db_table': 'CKE_Settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Classification',
            fields=[
                ('classificationid', models.AutoField(db_column='ClassificationId', primary_key=True, serialize=False)),
                ('classificationname', models.CharField(db_column='ClassificationName', max_length=200)),
            ],
            options={
                'db_table': 'Classification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contentitems',
            fields=[
                ('contentitemid', models.AutoField(db_column='ContentItemID', primary_key=True, serialize=False)),
                ('content', models.TextField(blank=True, db_column='Content', null=True)),
                ('tabid', models.IntegerField(db_column='TabID')),
                ('moduleid', models.IntegerField(db_column='ModuleID')),
                ('contentkey', models.CharField(blank=True, db_column='ContentKey', max_length=250, null=True)),
                ('indexed', models.BooleanField(db_column='Indexed')),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'ContentItems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentitemsMetadata',
            fields=[
                ('contentitemmetadataid', models.AutoField(db_column='ContentItemMetaDataID', primary_key=True, serialize=False)),
                ('metadatavalue', models.TextField(blank=True, db_column='MetaDataValue', null=True)),
            ],
            options={
                'db_table': 'ContentItems_MetaData',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentitemsTags',
            fields=[
                ('contentitemtagid', models.AutoField(db_column='ContentItemTagID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'ContentItems_Tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contenttypes',
            fields=[
                ('contenttypeid', models.AutoField(db_column='ContentTypeID', primary_key=True, serialize=False)),
                ('contenttype', models.CharField(db_column='ContentType', max_length=100, unique=True)),
            ],
            options={
                'db_table': 'ContentTypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contentworkflowactions',
            fields=[
                ('actionid', models.AutoField(db_column='ActionId', primary_key=True, serialize=False)),
                ('actiontype', models.CharField(db_column='ActionType', max_length=50)),
                ('actionsource', models.CharField(db_column='ActionSource', max_length=256)),
            ],
            options={
                'db_table': 'ContentWorkflowActions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contentworkflowlogs',
            fields=[
                ('workflowlogid', models.AutoField(db_column='WorkflowLogID', primary_key=True, serialize=False)),
                ('action', models.CharField(db_column='Action', max_length=40)),
                ('comment', models.TextField(db_column='Comment')),
                ('date', models.DateTimeField(db_column='Date')),
                ('user', models.IntegerField(db_column='User')),
                ('type', models.IntegerField(db_column='Type')),
            ],
            options={
                'db_table': 'ContentWorkflowLogs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contentworkflows',
            fields=[
                ('workflowid', models.AutoField(db_column='WorkflowID', primary_key=True, serialize=False)),
                ('portalid', models.IntegerField(blank=True, db_column='PortalID', null=True)),
                ('workflowname', models.CharField(db_column='WorkflowName', max_length=40)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=256, null=True)),
                ('isdeleted', models.BooleanField(db_column='IsDeleted')),
                ('startaftercreating', models.BooleanField(db_column='StartAfterCreating')),
                ('startafterediting', models.BooleanField(db_column='StartAfterEditing')),
                ('dispositionenabled', models.BooleanField(db_column='DispositionEnabled')),
                ('issystem', models.BooleanField(db_column='IsSystem')),
                ('workflowkey', models.CharField(db_column='WorkflowKey', max_length=40)),
            ],
            options={
                'db_table': 'ContentWorkflows',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contentworkflowsources',
            fields=[
                ('sourceid', models.AutoField(db_column='SourceID', primary_key=True, serialize=False)),
                ('sourcename', models.CharField(db_column='SourceName', max_length=20)),
                ('sourcetype', models.CharField(db_column='SourceType', max_length=250)),
            ],
            options={
                'db_table': 'ContentWorkflowSources',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contentworkflowstatepermission',
            fields=[
                ('workflowstatepermissionid', models.AutoField(db_column='WorkflowStatePermissionID', primary_key=True, serialize=False)),
                ('allowaccess', models.BooleanField(db_column='AllowAccess')),
                ('roleid', models.IntegerField(blank=True, db_column='RoleID', null=True)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'ContentWorkflowStatePermission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contentworkflowstates',
            fields=[
                ('stateid', models.AutoField(db_column='StateID', primary_key=True, serialize=False)),
                ('statename', models.CharField(db_column='StateName', max_length=40)),
                ('order', models.IntegerField(db_column='Order')),
                ('isactive', models.BooleanField(db_column='IsActive')),
                ('sendemail', models.BooleanField(db_column='SendEmail')),
                ('sendmessage', models.BooleanField(db_column='SendMessage')),
                ('isdisposalstate', models.BooleanField(db_column='IsDisposalState')),
                ('oncompletemessagesubject', models.CharField(db_column='OnCompleteMessageSubject', max_length=256)),
                ('oncompletemessagebody', models.CharField(db_column='OnCompleteMessageBody', max_length=1024)),
                ('ondiscardmessagesubject', models.CharField(db_column='OnDiscardMessageSubject', max_length=256)),
                ('ondiscardmessagebody', models.CharField(db_column='OnDiscardMessageBody', max_length=1024)),
                ('issystem', models.BooleanField(db_column='IsSystem')),
                ('sendnotification', models.BooleanField(db_column='SendNotification')),
                ('sendnotificationtoadministrators', models.BooleanField(db_column='SendNotificationToAdministrators')),
            ],
            options={
                'db_table': 'ContentWorkflowStates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CoremessagingMessageattachments',
            fields=[
                ('messageattachmentid', models.AutoField(db_column='MessageAttachmentID', primary_key=True, serialize=False)),
                ('fileid', models.IntegerField(blank=True, db_column='FileID', null=True)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'CoreMessaging_MessageAttachments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CoremessagingMessagerecipients',
            fields=[
                ('recipientid', models.AutoField(db_column='RecipientID', primary_key=True, serialize=False)),
                ('userid', models.IntegerField(db_column='UserID')),
                ('read', models.BooleanField(db_column='Read')),
                ('archived', models.BooleanField(db_column='Archived')),
                ('emailsent', models.BooleanField(db_column='EmailSent')),
                ('emailsentdate', models.DateTimeField(blank=True, db_column='EmailSentDate', null=True)),
                ('emailschedulerinstance', models.CharField(blank=True, db_column='EmailSchedulerInstance', max_length=36, null=True)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
                ('sendtoast', models.BooleanField(db_column='SendToast')),
            ],
            options={
                'db_table': 'CoreMessaging_MessageRecipients',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CoremessagingMessages',
            fields=[
                ('messageid', models.AutoField(db_column='MessageID', primary_key=True, serialize=False)),
                ('portalid', models.IntegerField(blank=True, db_column='PortalID', null=True)),
                ('to', models.CharField(blank=True, db_column='To', max_length=2000, null=True)),
                ('from_field', models.CharField(blank=True, db_column='From', max_length=200, null=True)),
                ('subject', models.CharField(blank=True, db_column='Subject', max_length=400, null=True)),
                ('body', models.TextField(blank=True, db_column='Body', null=True)),
                ('conversationid', models.IntegerField(blank=True, db_column='ConversationID', null=True)),
                ('replyallallowed', models.NullBooleanField(db_column='ReplyAllAllowed')),
                ('senderuserid', models.IntegerField(blank=True, db_column='SenderUserID', null=True)),
                ('expirationdate', models.DateTimeField(blank=True, db_column='ExpirationDate', null=True)),
                ('context', models.CharField(blank=True, db_column='Context', max_length=200, null=True)),
                ('includedismissaction', models.NullBooleanField(db_column='IncludeDismissAction')),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'CoreMessaging_Messages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CoremessagingNotificationtypeactions',
            fields=[
                ('notificationtypeactionid', models.AutoField(db_column='NotificationTypeActionID', primary_key=True, serialize=False)),
                ('nameresourcekey', models.CharField(db_column='NameResourceKey', max_length=100)),
                ('descriptionresourcekey', models.CharField(blank=True, db_column='DescriptionResourceKey', max_length=100, null=True)),
                ('confirmresourcekey', models.CharField(blank=True, db_column='ConfirmResourceKey', max_length=100, null=True)),
                ('order', models.IntegerField(db_column='Order')),
                ('apicall', models.CharField(db_column='APICall', max_length=500)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'CoreMessaging_NotificationTypeActions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CoremessagingNotificationtypes',
            fields=[
                ('notificationtypeid', models.AutoField(db_column='NotificationTypeID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=100, unique=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=2000, null=True)),
                ('ttl', models.IntegerField(blank=True, db_column='TTL', null=True)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
                ('istask', models.BooleanField(db_column='IsTask')),
            ],
            options={
                'db_table': 'CoreMessaging_NotificationTypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CoremessagingSubscriptions',
            fields=[
                ('subscriptionid', models.AutoField(db_column='SubscriptionId', primary_key=True, serialize=False)),
                ('objectkey', models.CharField(blank=True, db_column='ObjectKey', max_length=255, null=True)),
                ('objectdata', models.TextField(blank=True, db_column='ObjectData', null=True)),
                ('description', models.CharField(db_column='Description', max_length=255)),
                ('createdondate', models.DateTimeField(db_column='CreatedOnDate')),
                ('tabid', models.IntegerField(blank=True, db_column='TabId', null=True)),
            ],
            options={
                'db_table': 'CoreMessaging_Subscriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CoremessagingSubscriptiontypes',
            fields=[
                ('subscriptiontypeid', models.AutoField(db_column='SubscriptionTypeId', primary_key=True, serialize=False)),
                ('subscriptionname', models.CharField(db_column='SubscriptionName', max_length=50, unique=True)),
                ('friendlyname', models.CharField(db_column='FriendlyName', max_length=50)),
                ('desktopmoduleid', models.IntegerField(blank=True, db_column='DesktopModuleId', null=True)),
            ],
            options={
                'db_table': 'CoreMessaging_SubscriptionTypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CoremessagingUserpreferences',
            fields=[
                ('userpreferenceid', models.AutoField(db_column='UserPreferenceId', primary_key=True, serialize=False)),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('userid', models.IntegerField(db_column='UserId')),
                ('messagesemailfrequency', models.IntegerField(db_column='MessagesEmailFrequency')),
                ('notificationsemailfrequency', models.IntegerField(db_column='NotificationsEmailFrequency')),
            ],
            options={
                'db_table': 'CoreMessaging_UserPreferences',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardControls',
            fields=[
                ('dashboardcontrolid', models.AutoField(db_column='DashboardControlID', primary_key=True, serialize=False)),
                ('dashboardcontrolkey', models.CharField(db_column='DashboardControlKey', max_length=50)),
                ('isenabled', models.BooleanField(db_column='IsEnabled')),
                ('dashboardcontrolsrc', models.CharField(db_column='DashboardControlSrc', max_length=250)),
                ('dashboardcontrollocalresources', models.CharField(db_column='DashboardControlLocalResources', max_length=250)),
                ('controllerclass', models.CharField(blank=True, db_column='ControllerClass', max_length=250, null=True)),
                ('vieworder', models.IntegerField(db_column='ViewOrder')),
            ],
            options={
                'db_table': 'Dashboard_Controls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Desktopmodulepermission',
            fields=[
                ('desktopmodulepermissionid', models.AutoField(db_column='DesktopModulePermissionID', primary_key=True, serialize=False)),
                ('allowaccess', models.BooleanField(db_column='AllowAccess')),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'DesktopModulePermission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Desktopmodules',
            fields=[
                ('desktopmoduleid', models.AutoField(db_column='DesktopModuleID', primary_key=True, serialize=False)),
                ('friendlyname', models.CharField(db_column='FriendlyName', max_length=128)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=2000, null=True)),
                ('version', models.CharField(blank=True, db_column='Version', max_length=8, null=True)),
                ('ispremium', models.BooleanField(db_column='IsPremium')),
                ('isadmin', models.BooleanField(db_column='IsAdmin')),
                ('businesscontrollerclass', models.CharField(blank=True, db_column='BusinessControllerClass', max_length=200, null=True)),
                ('foldername', models.CharField(db_column='FolderName', max_length=128)),
                ('modulename', models.CharField(db_column='ModuleName', max_length=128, unique=True)),
                ('supportedfeatures', models.IntegerField(db_column='SupportedFeatures')),
                ('compatibleversions', models.CharField(blank=True, db_column='CompatibleVersions', max_length=500, null=True)),
                ('dependencies', models.CharField(blank=True, db_column='Dependencies', max_length=400, null=True)),
                ('permissions', models.CharField(blank=True, db_column='Permissions', max_length=400, null=True)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
                ('contentitemid', models.IntegerField(db_column='ContentItemId')),
                ('shareable', models.IntegerField(db_column='Shareable')),
                ('adminpage', models.CharField(blank=True, db_column='AdminPage', max_length=128, null=True)),
                ('hostpage', models.CharField(blank=True, db_column='HostPage', max_length=128, null=True)),
            ],
            options={
                'db_table': 'DesktopModules',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoDnngalleryContent',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='Title', max_length=100)),
                ('subtitle', models.CharField(blank=True, db_column='Subtitle', max_length=100, null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('contenttext', models.TextField(blank=True, db_column='ContentText', null=True)),
                ('picture', models.CharField(blank=True, db_column='Picture', max_length=200, null=True)),
                ('thumbnails', models.CharField(blank=True, db_column='Thumbnails', max_length=200, null=True)),
                ('urllink', models.CharField(blank=True, db_column='UrlLink', max_length=200, null=True)),
                ('viewtype', models.SmallIntegerField(db_column='ViewType')),
                ('viewtabid', models.IntegerField(db_column='ViewTabId')),
                ('viewmoduleid', models.IntegerField(db_column='ViewModuleId')),
                ('sort', models.IntegerField(db_column='Sort')),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=50)),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('urllinktype', models.SmallIntegerField(db_column='UrlLinkType')),
                ('urllinktarget', models.SmallIntegerField(db_column='UrlLinkTarget')),
                ('options', models.TextField(blank=True, db_column='Options', null=True)),
                ('starttime', models.DateTimeField(db_column='StartTime')),
                ('endtime', models.DateTimeField(db_column='EndTime')),
                ('per_allusers', models.SmallIntegerField(db_column='Per_AllUsers')),
                ('per_roles', models.TextField(blank=True, db_column='Per_Roles', null=True)),
            ],
            options={
                'db_table': 'DNNGo_DNNGallery_Content',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoDnngalleryContentGroup',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('contentid', models.IntegerField(db_column='ContentID')),
                ('groupid', models.IntegerField(db_column='GroupID')),
            ],
            options={
                'db_table': 'DNNGo_DNNGallery_Content_Group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoDnngalleryFiles',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=256)),
                ('filename', models.CharField(db_column='FileName', max_length=128)),
                ('filemate', models.CharField(db_column='FileMate', max_length=32)),
                ('filepath', models.CharField(db_column='FilePath', max_length=256)),
                ('fileextension', models.CharField(db_column='FileExtension', max_length=32)),
                ('filesize', models.IntegerField(db_column='FileSize')),
                ('imagewidth', models.IntegerField(db_column='ImageWidth')),
                ('imageheight', models.IntegerField(db_column='ImageHeight')),
                ('exif', models.TextField(blank=True, db_column='Exif', null=True)),
                ('sort', models.IntegerField(db_column='Sort')),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=32)),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('extension1', models.SmallIntegerField(db_column='Extension1')),
                ('extension2', models.IntegerField(db_column='Extension2')),
                ('extension3', models.CharField(blank=True, db_column='Extension3', max_length=512, null=True)),
                ('extension4', models.TextField(blank=True, db_column='Extension4', null=True)),
            ],
            options={
                'db_table': 'DNNGo_DNNGallery_Files',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoDnngalleryGroup',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=100)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=512, null=True)),
                ('quotecount', models.IntegerField(db_column='QuoteCount')),
                ('sort', models.IntegerField(db_column='Sort')),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
            ],
            options={
                'db_table': 'DNNGo_DNNGallery_Group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoDnngalleryproFilelogs',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('sliderid', models.IntegerField(db_column='SliderID')),
                ('layerid', models.IntegerField(db_column='LayerID')),
                ('fileid', models.IntegerField(db_column='FileID')),
                ('filelink', models.CharField(blank=True, db_column='FileLink', max_length=512, null=True)),
                ('options', models.TextField(blank=True, db_column='Options', null=True)),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
                ('createuser', models.IntegerField(db_column='CreateUser')),
                ('createip', models.CharField(db_column='CreateIP', max_length=50)),
            ],
            options={
                'db_table': 'DNNGo_DNNGalleryPro_FileLogs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoDnngalleryproFiles',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=256)),
                ('filename', models.CharField(db_column='FileName', max_length=128)),
                ('filemate', models.CharField(db_column='FileMate', max_length=32)),
                ('filepath', models.CharField(db_column='FilePath', max_length=256)),
                ('fileextension', models.CharField(db_column='FileExtension', max_length=32)),
                ('filesize', models.IntegerField(db_column='FileSize')),
                ('imagewidth', models.IntegerField(db_column='ImageWidth')),
                ('imageheight', models.IntegerField(db_column='ImageHeight')),
                ('exif', models.TextField(blank=True, db_column='Exif', null=True)),
                ('sort', models.IntegerField(db_column='Sort')),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=32)),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('extension1', models.SmallIntegerField(db_column='Extension1')),
                ('extension2', models.IntegerField(db_column='Extension2')),
                ('extension3', models.CharField(blank=True, db_column='Extension3', max_length=512, null=True)),
                ('extension4', models.TextField(blank=True, db_column='Extension4', null=True)),
            ],
            options={
                'db_table': 'DNNGo_DNNGalleryPro_Files',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoDnngalleryproGroup',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=100)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=512, null=True)),
                ('quotecount', models.IntegerField(db_column='QuoteCount')),
                ('sort', models.IntegerField(db_column='Sort')),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('options', models.TextField(blank=True, db_column='Options', null=True)),
            ],
            options={
                'db_table': 'DNNGo_DNNGalleryPro_Group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoDnngalleryproLayer',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('sliderid', models.IntegerField(db_column='SliderID')),
                ('options', models.TextField(blank=True, db_column='Options', null=True)),
                ('sort', models.IntegerField(db_column='Sort')),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('createuser', models.IntegerField(db_column='CreateUser')),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=50)),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('per_allusers', models.SmallIntegerField(db_column='Per_AllUsers')),
                ('per_roles', models.TextField(blank=True, db_column='Per_Roles', null=True)),
                ('clicks', models.IntegerField(db_column='Clicks')),
                ('views', models.IntegerField(db_column='Views')),
                ('heats', models.IntegerField(db_column='Heats')),
            ],
            options={
                'db_table': 'DNNGo_DNNGalleryPro_Layer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoDnngalleryproSlider',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('options', models.TextField(blank=True, db_column='Options', null=True)),
                ('sort', models.IntegerField(db_column='Sort')),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('createuser', models.IntegerField(db_column='CreateUser')),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
                ('starttime', models.DateTimeField(db_column='StartTime')),
                ('endtime', models.DateTimeField(db_column='EndTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=50)),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('per_allusers', models.SmallIntegerField(db_column='Per_AllUsers')),
                ('per_roles', models.TextField(blank=True, db_column='Per_Roles', null=True)),
                ('attribute1', models.IntegerField(db_column='Attribute1')),
                ('attribute2', models.TextField(blank=True, db_column='Attribute2', null=True)),
                ('extension', models.TextField(blank=True, db_column='Extension', null=True)),
                ('clicks', models.IntegerField(db_column='Clicks')),
                ('views', models.IntegerField(db_column='Views')),
                ('heats', models.IntegerField(db_column='Heats')),
            ],
            options={
                'db_table': 'DNNGo_DNNGalleryPro_Slider',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoDnngalleryproSliderGroup',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('sliderid', models.IntegerField(db_column='SliderID')),
                ('groupid', models.IntegerField(db_column='GroupID')),
            ],
            options={
                'db_table': 'DNNGo_DNNGalleryPro_Slider_Group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoLayergalleryContent',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='Title', max_length=200)),
                ('options', models.TextField(blank=True, db_column='Options', null=True)),
                ('sort', models.IntegerField(db_column='Sort')),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('starttime', models.DateTimeField(db_column='StartTime')),
                ('endtime', models.DateTimeField(db_column='EndTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=50)),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
            ],
            options={
                'db_table': 'DNNGo_LayerGallery_Content',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoLayergalleryFiles',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=256)),
                ('filename', models.CharField(db_column='FileName', max_length=128)),
                ('filemate', models.CharField(db_column='FileMate', max_length=32)),
                ('filepath', models.CharField(db_column='FilePath', max_length=256)),
                ('fileextension', models.CharField(db_column='FileExtension', max_length=32)),
                ('filesize', models.IntegerField(db_column='FileSize')),
                ('imagewidth', models.IntegerField(db_column='ImageWidth')),
                ('imageheight', models.IntegerField(db_column='ImageHeight')),
                ('exif', models.TextField(blank=True, db_column='Exif', null=True)),
                ('sort', models.IntegerField(db_column='Sort')),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=32)),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('extension1', models.SmallIntegerField(db_column='Extension1')),
                ('extension2', models.IntegerField(db_column='Extension2')),
                ('extension3', models.CharField(blank=True, db_column='Extension3', max_length=512, null=True)),
                ('extension4', models.TextField(blank=True, db_column='Extension4', null=True)),
            ],
            options={
                'db_table': 'DNNGo_LayerGallery_Files',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoLayergalleryItem',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('contentid', models.IntegerField(db_column='ContentID')),
                ('title', models.CharField(db_column='Title', max_length=512)),
                ('itemtype', models.SmallIntegerField(db_column='ItemType')),
                ('options', models.TextField(blank=True, db_column='Options', null=True)),
                ('sort', models.IntegerField(db_column='Sort')),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=50)),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
            ],
            options={
                'db_table': 'DNNGo_LayerGallery_Item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoLayerslider3DContent',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='Title', max_length=512)),
                ('picture', models.CharField(blank=True, db_column='Picture', max_length=512, null=True)),
                ('urllink', models.CharField(blank=True, db_column='UrlLink', max_length=512, null=True)),
                ('urllinktarget', models.SmallIntegerField(db_column='UrlLinkTarget')),
                ('urllinktype', models.SmallIntegerField(db_column='UrlLinkType')),
                ('options', models.TextField(blank=True, db_column='Options', null=True)),
                ('sort', models.IntegerField(db_column='Sort')),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=50)),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('starttime', models.DateTimeField(db_column='StartTime')),
                ('endtime', models.DateTimeField(db_column='EndTime')),
            ],
            options={
                'db_table': 'DNNGo_LayerSlider3D_Content',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoLayerslider3DItem',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('contentid', models.IntegerField(db_column='ContentID')),
                ('title', models.CharField(db_column='Title', max_length=512)),
                ('itemtype', models.SmallIntegerField(db_column='ItemType')),
                ('options', models.TextField(blank=True, db_column='Options', null=True)),
                ('picture', models.CharField(blank=True, db_column='Picture', max_length=512, null=True)),
                ('sort', models.IntegerField(db_column='Sort')),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=50)),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
            ],
            options={
                'db_table': 'DNNGo_LayerSlider3D_Item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoMegamenuaddonFilelogs',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('sliderid', models.IntegerField(db_column='SliderID')),
                ('layerid', models.IntegerField(db_column='LayerID')),
                ('fileid', models.IntegerField(db_column='FileID')),
                ('filelink', models.CharField(blank=True, db_column='FileLink', max_length=512, null=True)),
                ('options', models.TextField(blank=True, db_column='Options', null=True)),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
                ('createuser', models.IntegerField(db_column='CreateUser')),
                ('createip', models.CharField(db_column='CreateIP', max_length=50)),
            ],
            options={
                'db_table': 'DNNGo_MegaMenuAddon_FileLogs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoMegamenuaddonFiles',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=256)),
                ('filename', models.CharField(db_column='FileName', max_length=128)),
                ('filemate', models.CharField(db_column='FileMate', max_length=32)),
                ('filepath', models.CharField(db_column='FilePath', max_length=256)),
                ('fileextension', models.CharField(db_column='FileExtension', max_length=32)),
                ('filesize', models.IntegerField(db_column='FileSize')),
                ('imagewidth', models.IntegerField(db_column='ImageWidth')),
                ('imageheight', models.IntegerField(db_column='ImageHeight')),
                ('exif', models.TextField(blank=True, db_column='Exif', null=True)),
                ('sort', models.IntegerField(db_column='Sort')),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=32)),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('extension1', models.SmallIntegerField(db_column='Extension1')),
                ('extension2', models.IntegerField(db_column='Extension2')),
                ('extension3', models.CharField(blank=True, db_column='Extension3', max_length=512, null=True)),
                ('extension4', models.TextField(blank=True, db_column='Extension4', null=True)),
            ],
            options={
                'db_table': 'DNNGo_MegaMenuAddon_Files',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoMegamenuaddonGroup',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=100)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=512, null=True)),
                ('quotecount', models.IntegerField(db_column='QuoteCount')),
                ('sort', models.IntegerField(db_column='Sort')),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
            ],
            options={
                'db_table': 'DNNGo_MegaMenuAddon_Group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoMegamenuaddonLayer',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('sliderid', models.IntegerField(db_column='SliderID')),
                ('options', models.TextField(blank=True, db_column='Options', null=True)),
                ('sort', models.IntegerField(db_column='Sort')),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('createuser', models.IntegerField(db_column='CreateUser')),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=50)),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('per_allusers', models.SmallIntegerField(db_column='Per_AllUsers')),
                ('per_roles', models.TextField(blank=True, db_column='Per_Roles', null=True)),
                ('clicks', models.IntegerField(db_column='Clicks')),
                ('views', models.IntegerField(db_column='Views')),
                ('heats', models.IntegerField(db_column='Heats')),
            ],
            options={
                'db_table': 'DNNGo_MegaMenuAddon_Layer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoMegamenuaddonSlider',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('options', models.TextField(blank=True, db_column='Options', null=True)),
                ('sort', models.IntegerField(db_column='Sort')),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('createuser', models.IntegerField(db_column='CreateUser')),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
                ('starttime', models.DateTimeField(db_column='StartTime')),
                ('endtime', models.DateTimeField(db_column='EndTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=50)),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('per_allusers', models.SmallIntegerField(db_column='Per_AllUsers')),
                ('per_roles', models.TextField(blank=True, db_column='Per_Roles', null=True)),
                ('attribute1', models.IntegerField(db_column='Attribute1')),
                ('attribute2', models.TextField(blank=True, db_column='Attribute2', null=True)),
                ('extension', models.TextField(blank=True, db_column='Extension', null=True)),
                ('clicks', models.IntegerField(db_column='Clicks')),
                ('views', models.IntegerField(db_column='Views')),
                ('heats', models.IntegerField(db_column='Heats')),
            ],
            options={
                'db_table': 'DNNGo_MegaMenuAddon_Slider',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoMegamenuaddonSliderGroup',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('sliderid', models.IntegerField(db_column='SliderID')),
                ('groupid', models.IntegerField(db_column='GroupID')),
            ],
            options={
                'db_table': 'DNNGo_MegaMenuAddon_Slider_Group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoMegamenuContent',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('tabid', models.IntegerField(db_column='TabID')),
                ('language', models.CharField(db_column='Language', max_length=50)),
                ('title', models.CharField(db_column='Title', max_length=200)),
                ('contenttext', models.TextField(db_column='ContentText')),
                ('position', models.SmallIntegerField(db_column='Position')),
                ('bindtabid', models.IntegerField(db_column='BindTabID')),
                ('bindmoduleid', models.IntegerField(db_column='BindModuleID')),
                ('options', models.TextField(db_column='Options')),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=32)),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('globals_background', models.SmallIntegerField(db_column='Globals_Background')),
                ('globals_breadcrumb', models.SmallIntegerField(db_column='Globals_Breadcrumb')),
            ],
            options={
                'db_table': 'DNNGo_Megamenu_Content',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoMegamenuOptions',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('tabid', models.IntegerField(db_column='TabID')),
                ('tabtype', models.SmallIntegerField(db_column='TabType')),
                ('options', models.TextField(db_column='Options')),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=32)),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
            ],
            options={
                'db_table': 'DNNGo_Megamenu_Options',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoPhotoalbumsAlbum',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='Title', max_length=256)),
                ('summary', models.CharField(blank=True, db_column='Summary', max_length=512, null=True)),
                ('contenttext', models.TextField(blank=True, db_column='ContentText', null=True)),
                ('photocount', models.IntegerField(db_column='PhotoCount')),
                ('albumsize', models.IntegerField(db_column='AlbumSize')),
                ('tags', models.CharField(blank=True, db_column='Tags', max_length=256, null=True)),
                ('additionalpicture', models.IntegerField(db_column='AdditionalPicture')),
                ('locationstatus', models.SmallIntegerField(db_column='LocationStatus')),
                ('location', models.CharField(blank=True, db_column='Location', max_length=128, null=True)),
                ('location_x', models.CharField(blank=True, db_column='Location_X', max_length=20, null=True)),
                ('location_y', models.CharField(blank=True, db_column='Location_Y', max_length=20, null=True)),
                ('commentcount', models.IntegerField(db_column='CommentCount')),
                ('viewcount', models.IntegerField(db_column='ViewCount')),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('viewstatus', models.SmallIntegerField(db_column='ViewStatus')),
                ('question', models.CharField(blank=True, db_column='Question', max_length=128, null=True)),
                ('answer', models.CharField(blank=True, db_column='Answer', max_length=128, null=True)),
                ('password', models.CharField(blank=True, db_column='Password', max_length=128, null=True)),
                ('sort', models.IntegerField(db_column='Sort')),
                ('createuser', models.IntegerField(db_column='CreateUser')),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
                ('publishtime', models.DateTimeField(db_column='PublishTime')),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=50)),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('searchtitle', models.CharField(blank=True, db_column='SearchTitle', max_length=128, null=True)),
                ('searchkeywords', models.CharField(blank=True, db_column='SearchKeywords', max_length=256, null=True)),
                ('searchdescription', models.CharField(blank=True, db_column='SearchDescription', max_length=512, null=True)),
                ('extension1', models.SmallIntegerField(db_column='Extension1')),
                ('extension2', models.IntegerField(db_column='Extension2')),
                ('extension3', models.CharField(db_column='Extension3', max_length=512)),
                ('extension4', models.TextField(db_column='Extension4')),
                ('options', models.TextField(blank=True, db_column='Options', null=True)),
                ('endtime', models.DateTimeField(db_column='EndTime')),
                ('friendlyurl', models.CharField(blank=True, db_column='FriendlyUrl', max_length=512, null=True)),
            ],
            options={
                'db_table': 'DNNGo_PhotoAlbums_Album',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoPhotoalbumsAlbumphoto',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('albumid', models.IntegerField(db_column='AlbumID')),
                ('photoid', models.IntegerField(db_column='PhotoID')),
                ('sort', models.IntegerField(db_column='Sort')),
                ('type', models.SmallIntegerField(db_column='Type')),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=50)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=200, null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('options', models.TextField(blank=True, db_column='Options', null=True)),
            ],
            options={
                'db_table': 'DNNGo_PhotoAlbums_AlbumPhoto',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoPhotoalbumsCategoryRelationships',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('categoryid', models.IntegerField(db_column='CategoryID')),
                ('albumid', models.IntegerField(db_column='AlbumID')),
            ],
            options={
                'db_table': 'DNNGo_PhotoAlbums_Category_Relationships',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoPhotoalbumsCategorys',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('parentid', models.IntegerField(db_column='ParentID')),
                ('name', models.CharField(db_column='Name', max_length=128)),
                ('contenttext', models.CharField(blank=True, db_column='ContentText', max_length=512, null=True)),
                ('additionalpicture', models.IntegerField(db_column='AdditionalPicture')),
                ('sort', models.IntegerField(db_column='Sort')),
                ('childcount', models.IntegerField(db_column='ChildCount')),
                ('articlecount', models.IntegerField(db_column='ArticleCount')),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=32)),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('friendlyurl', models.CharField(blank=True, db_column='FriendlyUrl', max_length=512, null=True)),
            ],
            options={
                'db_table': 'DNNGo_PhotoAlbums_Categorys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoPhotoalbumsComments',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('albumid', models.IntegerField(db_column='AlbumID')),
                ('photoid', models.IntegerField(db_column='PhotoID')),
                ('parentid', models.IntegerField(db_column='ParentID')),
                ('levelid', models.IntegerField(db_column='LevelID')),
                ('title', models.CharField(db_column='Title', max_length=128)),
                ('contenttext', models.TextField(db_column='ContentText')),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('email', models.CharField(blank=True, db_column='Email', max_length=64, null=True)),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=32, null=True)),
                ('website', models.CharField(blank=True, db_column='WebSite', max_length=128, null=True)),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
                ('userid', models.IntegerField(db_column='UserID')),
                ('userip', models.CharField(db_column='UserIP', max_length=32)),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
            ],
            options={
                'db_table': 'DNNGo_PhotoAlbums_Comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoPhotoalbumsFilterservices',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('filtername', models.CharField(db_column='FilterName', max_length=50)),
                ('dllname', models.CharField(db_column='DllName', max_length=200)),
                ('classname', models.CharField(db_column='ClassName', max_length=200)),
                ('checkcount', models.IntegerField(db_column='CheckCount')),
                ('spamcount', models.IntegerField(db_column='SpamCount')),
                ('errorcount', models.IntegerField(db_column='ErrorCount')),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=32)),
            ],
            options={
                'db_table': 'DNNGo_PhotoAlbums_FilterServices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoPhotoalbumsPhoto',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('albumid', models.IntegerField(db_column='AlbumID')),
                ('name', models.CharField(db_column='Name', max_length=256)),
                ('filename', models.CharField(db_column='FileName', max_length=256)),
                ('filesuffix', models.CharField(db_column='FileSuffix', max_length=50)),
                ('filesize', models.IntegerField(db_column='FileSize')),
                ('filemeta', models.CharField(db_column='FileMeta', max_length=50)),
                ('imagewidth', models.IntegerField(db_column='ImageWidth')),
                ('imageheight', models.IntegerField(db_column='ImageHeight')),
                ('exif', models.TextField(blank=True, db_column='Exif', null=True)),
                ('contenttext', models.TextField(blank=True, db_column='ContentText', null=True)),
                ('tags', models.CharField(blank=True, db_column='Tags', max_length=256, null=True)),
                ('locationstatus', models.SmallIntegerField(db_column='LocationStatus')),
                ('location', models.CharField(blank=True, db_column='Location', max_length=128, null=True)),
                ('location_x', models.CharField(blank=True, db_column='Location_X', max_length=20, null=True)),
                ('location_y', models.CharField(blank=True, db_column='Location_Y', max_length=20, null=True)),
                ('viewstatus', models.SmallIntegerField(db_column='ViewStatus')),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('sort', models.IntegerField(db_column='Sort')),
                ('createuser', models.IntegerField(db_column='CreateUser')),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=50)),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('extension1', models.SmallIntegerField(db_column='Extension1')),
                ('extension2', models.IntegerField(db_column='Extension2')),
                ('extension3', models.CharField(db_column='Extension3', max_length=512)),
                ('extension4', models.TextField(db_column='Extension4')),
            ],
            options={
                'db_table': 'DNNGo_PhotoAlbums_Photo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoPhotoalbumsTags',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('contenttext', models.CharField(db_column='ContentText', max_length=50)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=512, null=True)),
                ('quotecount', models.IntegerField(db_column='QuoteCount')),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
            ],
            options={
                'db_table': 'DNNGo_PhotoAlbums_Tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoPowerformsContent',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='UserName', max_length=100)),
                ('email', models.CharField(db_column='Email', max_length=256)),
                ('cultureinfo', models.CharField(db_column='CultureInfo', max_length=50)),
                ('contentvalue', models.TextField(db_column='ContentValue')),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=50)),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('paymentstatus', models.CharField(blank=True, db_column='PaymentStatus', max_length=200, null=True)),
                ('paymenttime', models.DateTimeField(blank=True, db_column='PaymentTime', null=True)),
                ('paymentlink', models.CharField(blank=True, db_column='PaymentLink', max_length=500, null=True)),
                ('transactionid', models.CharField(blank=True, db_column='TransactionID', max_length=500, null=True)),
                ('verifystring', models.CharField(blank=True, db_column='VerifyString', max_length=30, null=True)),
                ('formversion', models.CharField(blank=True, db_column='FormVersion', max_length=50, null=True)),
            ],
            options={
                'db_table': 'DNNGo_PowerForms_Content',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoPowerformsField',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('groupid', models.IntegerField(db_column='GroupID')),
                ('name', models.CharField(db_column='Name', max_length=100)),
                ('alias', models.CharField(db_column='Alias', max_length=100)),
                ('tooltip', models.CharField(blank=True, db_column='ToolTip', max_length=256, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=512, null=True)),
                ('defaultvalue', models.TextField(blank=True, db_column='DefaultValue', null=True)),
                ('fieldtype', models.SmallIntegerField(db_column='FieldType')),
                ('direction', models.SmallIntegerField(db_column='Direction')),
                ('width', models.IntegerField(db_column='Width')),
                ('rows', models.IntegerField(db_column='Rows')),
                ('filedlist', models.TextField(blank=True, db_column='FiledList', null=True)),
                ('required', models.SmallIntegerField(db_column='Required')),
                ('verification', models.SmallIntegerField(db_column='Verification')),
                ('sort', models.IntegerField(db_column='Sort')),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=50)),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('widthsuffix', models.SmallIntegerField(db_column='WidthSuffix')),
                ('listcolumn', models.IntegerField(db_column='ListColumn')),
                ('options', models.TextField(blank=True, db_column='Options', null=True)),
                ('createuser', models.IntegerField(db_column='CreateUser')),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
                ('starttime', models.DateTimeField(db_column='StartTime')),
                ('endtime', models.DateTimeField(db_column='EndTime')),
                ('per_allusers', models.SmallIntegerField(db_column='Per_AllUsers')),
                ('per_roles', models.TextField(blank=True, db_column='Per_Roles', null=True)),
                ('inputlength', models.IntegerField(db_column='InputLength')),
                ('equalscontrol', models.IntegerField(db_column='EqualsControl')),
                ('associatedcontrol', models.IntegerField(db_column='AssociatedControl')),
            ],
            options={
                'db_table': 'DNNGo_PowerForms_Field',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoPowerformsFiles',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=256)),
                ('filename', models.CharField(db_column='FileName', max_length=128)),
                ('filemate', models.CharField(db_column='FileMate', max_length=32)),
                ('filepath', models.CharField(db_column='FilePath', max_length=256)),
                ('fileextension', models.CharField(db_column='FileExtension', max_length=32)),
                ('filesize', models.IntegerField(db_column='FileSize')),
                ('imagewidth', models.IntegerField(db_column='ImageWidth')),
                ('imageheight', models.IntegerField(db_column='ImageHeight')),
                ('exif', models.TextField(blank=True, db_column='Exif', null=True)),
                ('sort', models.IntegerField(db_column='Sort')),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=32)),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('extension1', models.SmallIntegerField(db_column='Extension1')),
                ('extension2', models.IntegerField(db_column='Extension2')),
                ('extension3', models.CharField(blank=True, db_column='Extension3', max_length=512, null=True)),
                ('extension4', models.TextField(blank=True, db_column='Extension4', null=True)),
            ],
            options={
                'db_table': 'DNNGo_PowerForms_Files',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoPowerformsGroup',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=128)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=512, null=True)),
                ('sort', models.IntegerField(db_column='Sort')),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=50)),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('options', models.TextField(blank=True, db_column='Options', null=True)),
            ],
            options={
                'db_table': 'DNNGo_PowerForms_Group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoPowerformsScheduler',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('senderemail', models.CharField(db_column='SenderEmail', max_length=500)),
                ('excelname', models.CharField(db_column='ExcelName', max_length=500)),
                ('enable', models.SmallIntegerField(db_column='Enable')),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=50)),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
            ],
            options={
                'db_table': 'DNNGo_PowerForms_Scheduler',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoPowerformsTemplate',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('receiverssubject', models.CharField(db_column='ReceiversSubject', max_length=512)),
                ('receiverstemplate', models.TextField(db_column='ReceiversTemplate')),
                ('replysubject', models.CharField(db_column='ReplySubject', max_length=512)),
                ('replytemplate', models.TextField(db_column='ReplyTemplate')),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=50)),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
            ],
            options={
                'db_table': 'DNNGo_PowerForms_Template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoSliderrevolution3DContent',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='Title', max_length=512)),
                ('picture', models.CharField(blank=True, db_column='Picture', max_length=512, null=True)),
                ('urllink', models.CharField(blank=True, db_column='UrlLink', max_length=512, null=True)),
                ('urllinktarget', models.SmallIntegerField(db_column='UrlLinkTarget')),
                ('urllinktype', models.SmallIntegerField(db_column='UrlLinkType')),
                ('options', models.TextField(blank=True, db_column='Options', null=True)),
                ('sort', models.IntegerField(db_column='Sort')),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=50)),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('starttime', models.DateTimeField(db_column='StartTime')),
                ('endtime', models.DateTimeField(db_column='EndTime')),
            ],
            options={
                'db_table': 'DNNGo_SliderRevolution3D_Content',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoSliderrevolution3DItem',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('contentid', models.IntegerField(db_column='ContentID')),
                ('title', models.CharField(db_column='Title', max_length=512)),
                ('itemtype', models.SmallIntegerField(db_column='ItemType')),
                ('options', models.TextField(blank=True, db_column='Options', null=True)),
                ('picture', models.CharField(blank=True, db_column='Picture', max_length=512, null=True)),
                ('sort', models.IntegerField(db_column='Sort')),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=50)),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
            ],
            options={
                'db_table': 'DNNGo_SliderRevolution3D_Item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoXblogArticles',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=512, null=True)),
                ('summary', models.CharField(blank=True, db_column='Summary', max_length=2048, null=True)),
                ('contenttext', models.TextField(db_column='ContentText')),
                ('additionalpicture', models.IntegerField(db_column='AdditionalPicture')),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('attributionstatus', models.SmallIntegerField(db_column='AttributionStatus')),
                ('topstatus', models.SmallIntegerField(db_column='TopStatus')),
                ('tags', models.CharField(blank=True, db_column='Tags', max_length=512, null=True)),
                ('commentcount', models.IntegerField(db_column='CommentCount')),
                ('viewcount', models.IntegerField(db_column='ViewCount')),
                ('publishtime', models.DateTimeField(db_column='PublishTime')),
                ('endtime', models.DateTimeField(blank=True, db_column='EndTime', null=True)),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
                ('createuser', models.IntegerField(db_column='CreateUser')),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(blank=True, db_column='LastIP', max_length=50, null=True)),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('feature', models.SmallIntegerField(db_column='Feature')),
                ('searchtitle', models.CharField(blank=True, db_column='SearchTitle', max_length=512, null=True)),
                ('searchkeywords', models.CharField(blank=True, db_column='SearchKeywords', max_length=512, null=True)),
                ('searchdescription', models.CharField(blank=True, db_column='SearchDescription', max_length=512, null=True)),
                ('options', models.TextField(blank=True, db_column='Options', null=True)),
                ('extension1', models.SmallIntegerField(blank=True, db_column='Extension1', null=True)),
                ('extension2', models.IntegerField(blank=True, db_column='Extension2', null=True)),
                ('extension3', models.CharField(blank=True, db_column='Extension3', max_length=512, null=True)),
                ('extension4', models.TextField(blank=True, db_column='Extension4', null=True)),
                ('sendsubscribe', models.SmallIntegerField(db_column='SendSubscribe')),
                ('source', models.CharField(blank=True, db_column='Source', max_length=512, null=True)),
                ('friendlyurl', models.CharField(blank=True, db_column='FriendlyUrl', max_length=512, null=True)),
                ('per_allusers', models.SmallIntegerField(db_column='Per_AllUsers')),
                ('per_roles', models.TextField(blank=True, db_column='Per_Roles', null=True)),
            ],
            options={
                'db_table': 'DNNGo_xBlog_Articles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoXblogArticlesFiles',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('articleid', models.IntegerField(db_column='ArticleID')),
                ('multimediaid', models.IntegerField(db_column='MultimediaID')),
                ('type', models.SmallIntegerField(db_column='Type')),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(blank=True, db_column='LastIP', max_length=50, null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=100, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=500, null=True)),
            ],
            options={
                'db_table': 'DNNGo_xBlog_Articles_Files',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoXblogArticlesLanguage',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('language', models.CharField(db_column='Language', max_length=50)),
                ('articleid', models.IntegerField(db_column='ArticleID')),
                ('articlelink', models.CharField(db_column='ArticleLink', max_length=500)),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
                ('createuser', models.IntegerField(db_column='CreateUser')),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(blank=True, db_column='LastIP', max_length=50, null=True)),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('status', models.SmallIntegerField(db_column='Status')),
            ],
            options={
                'db_table': 'DNNGo_xBlog_Articles_Language',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoXblogCategoryRelationships',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('categoryid', models.IntegerField(db_column='CategoryID')),
                ('articleid', models.IntegerField(db_column='ArticleID')),
            ],
            options={
                'db_table': 'DNNGo_xBlog_Category_Relationships',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoXblogCategorys',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('parentid', models.IntegerField(db_column='ParentID')),
                ('name', models.CharField(db_column='Name', max_length=128)),
                ('contenttext', models.CharField(blank=True, db_column='ContentText', max_length=512, null=True)),
                ('additionalpicture', models.IntegerField(db_column='AdditionalPicture')),
                ('sort', models.IntegerField(db_column='Sort')),
                ('childcount', models.IntegerField(db_column='ChildCount')),
                ('articlecount', models.IntegerField(db_column='ArticleCount')),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(blank=True, db_column='LastIP', max_length=50, null=True)),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('friendlyurl', models.CharField(blank=True, db_column='FriendlyUrl', max_length=512, null=True)),
                ('options', models.TextField(blank=True, db_column='Options', null=True)),
            ],
            options={
                'db_table': 'DNNGo_xBlog_Categorys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoXblogComments',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('articleid', models.IntegerField(db_column='ArticleID')),
                ('parentid', models.IntegerField(db_column='ParentID')),
                ('levelid', models.IntegerField(db_column='LevelID')),
                ('title', models.CharField(db_column='Title', max_length=128)),
                ('contenttext', models.TextField(db_column='ContentText')),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('email', models.CharField(blank=True, db_column='Email', max_length=64, null=True)),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=32, null=True)),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
                ('userid', models.IntegerField(db_column='UserID')),
                ('userip', models.CharField(blank=True, db_column='UserIP', max_length=50, null=True)),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('website', models.CharField(blank=True, db_column='WebSite', max_length=128, null=True)),
            ],
            options={
                'db_table': 'DNNGo_xBlog_Comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoXblogFiltercustom',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('action', models.SmallIntegerField(db_column='Action')),
                ('subject', models.SmallIntegerField(db_column='Subject')),
                ('operator', models.SmallIntegerField(db_column='Operator')),
                ('filtervalue', models.CharField(db_column='FilterValue', max_length=512)),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(blank=True, db_column='LastIP', max_length=50, null=True)),
            ],
            options={
                'db_table': 'DNNGo_xBlog_FilterCustom',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoXblogFilterservices',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('filtername', models.CharField(db_column='FilterName', max_length=50)),
                ('dllname', models.CharField(db_column='DllName', max_length=200)),
                ('classname', models.CharField(db_column='ClassName', max_length=200)),
                ('checkcount', models.IntegerField(db_column='CheckCount')),
                ('spamcount', models.IntegerField(db_column='SpamCount')),
                ('errorcount', models.IntegerField(db_column='ErrorCount')),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(blank=True, db_column='LastIP', max_length=50, null=True)),
            ],
            options={
                'db_table': 'DNNGo_xBlog_FilterServices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoXblogMultimedia',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('filename', models.CharField(db_column='FileName', max_length=128)),
                ('filemate', models.CharField(db_column='FileMate', max_length=32)),
                ('filepath', models.CharField(db_column='FilePath', max_length=256)),
                ('fileextension', models.CharField(db_column='FileExtension', max_length=32)),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(blank=True, db_column='LastIP', max_length=50, null=True)),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('name', models.CharField(blank=True, db_column='Name', max_length=256, null=True)),
                ('filesize', models.IntegerField(db_column='FileSize')),
                ('imagewidth', models.IntegerField(db_column='ImageWidth')),
                ('imageheight', models.IntegerField(db_column='ImageHeight')),
                ('exif', models.TextField(blank=True, db_column='Exif', null=True)),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('sort', models.IntegerField(db_column='Sort')),
                ('extension1', models.SmallIntegerField(db_column='Extension1')),
                ('extension2', models.IntegerField(db_column='Extension2')),
                ('extension3', models.CharField(blank=True, db_column='Extension3', max_length=512, null=True)),
                ('extension4', models.TextField(blank=True, db_column='Extension4', null=True)),
            ],
            options={
                'db_table': 'DNNGo_xBlog_Multimedia',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoXblogRssfeeds',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='Title', max_length=128)),
                ('url', models.CharField(db_column='Url', max_length=512)),
                ('activation', models.SmallIntegerField(db_column='Activation')),
                ('categories', models.IntegerField()),
                ('author', models.IntegerField(db_column='Author')),
                ('getnum', models.IntegerField(db_column='GetNum')),
                ('errornum', models.IntegerField(db_column='ErrorNum')),
                ('getlasttime', models.DateTimeField(db_column='GetLastTime')),
                ('options', models.TextField(blank=True, db_column='Options', null=True)),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(blank=True, db_column='LastIP', max_length=50, null=True)),
            ],
            options={
                'db_table': 'DNNGo_xBlog_RssFeeds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoXblogSubscription',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('subscriptiontype', models.SmallIntegerField(db_column='SubscriptionType')),
                ('subscriptionemail', models.CharField(blank=True, db_column='SubscriptionEmail', max_length=256, null=True)),
                ('subscriptionuserid', models.IntegerField(db_column='SubscriptionUserID')),
                ('subscriptionroleid', models.IntegerField(db_column='SubscriptionRoleID')),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('starttime', models.DateTimeField(db_column='StartTime')),
                ('endtime', models.DateTimeField(db_column='EndTime')),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(blank=True, db_column='LastIP', max_length=50, null=True)),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('subscriptionname', models.CharField(blank=True, db_column='SubscriptionName', max_length=256, null=True)),
            ],
            options={
                'db_table': 'DNNGo_xBlog_Subscription',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoXblogTags',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('contenttext', models.CharField(db_column='ContentText', max_length=50)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=512, null=True)),
                ('quotecount', models.IntegerField(db_column='QuoteCount')),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
            ],
            options={
                'db_table': 'DNNGo_xBlog_Tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoXblogTemplate',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('receiverssubject', models.CharField(db_column='ReceiversSubject', max_length=512)),
                ('receiverstemplate', models.TextField(db_column='ReceiversTemplate')),
                ('replysubject', models.CharField(db_column='ReplySubject', max_length=512)),
                ('replytemplate', models.TextField(db_column='ReplyTemplate')),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(blank=True, db_column='LastIP', max_length=50, null=True)),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('subscriptionsubject', models.CharField(blank=True, db_column='SubscriptionSubject', max_length=512, null=True)),
                ('subscriptiontemplate', models.TextField(blank=True, db_column='SubscriptionTemplate', null=True)),
                ('subscriptionlistsubject', models.CharField(blank=True, db_column='SubscriptionListSubject', max_length=512, null=True)),
                ('subscriptionlisttemplate', models.TextField(blank=True, db_column='SubscriptionListTemplate', null=True)),
                ('subscriptionlisttemplate_items', models.TextField(blank=True, db_column='SubscriptionListTemplate_Items', null=True)),
            ],
            options={
                'db_table': 'DNNGo_xBlog_Template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoXblogThemes',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=128)),
                ('alias', models.CharField(db_column='Alias', max_length=128)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=512, null=True)),
                ('version', models.CharField(db_column='Version', max_length=32)),
                ('picture', models.CharField(blank=True, db_column='Picture', max_length=512, null=True)),
                ('tags', models.CharField(blank=True, db_column='Tags', max_length=128, null=True)),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=32)),
            ],
            options={
                'db_table': 'DNNGo_xBlog_Themes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoXblogThemeSettings',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('themename', models.CharField(db_column='ThemeName', max_length=128)),
                ('name', models.CharField(db_column='Name', max_length=128)),
                ('fieldname', models.CharField(db_column='FieldName', max_length=128)),
                ('fieldtype', models.SmallIntegerField(db_column='FieldType')),
                ('fielddescription', models.CharField(blank=True, db_column='FieldDescription', max_length=512, null=True)),
                ('listcollection', models.CharField(blank=True, db_column='ListCollection', max_length=2048, null=True)),
                ('listtype', models.SmallIntegerField(blank=True, db_column='ListType', null=True)),
                ('defaultvalue', models.CharField(blank=True, db_column='DefaultValue', max_length=512, null=True)),
                ('value', models.CharField(blank=True, db_column='Value', max_length=2048, null=True)),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
            ],
            options={
                'db_table': 'DNNGo_xBlog_Theme_Settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoXpluginMultimedia',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=300, null=True)),
                ('filesize', models.IntegerField(db_column='FileSize')),
                ('imagewidth', models.IntegerField(db_column='ImageWidth')),
                ('imageheight', models.IntegerField(db_column='ImageHeight')),
                ('exif', models.TextField(blank=True, db_column='Exif', null=True)),
                ('filename', models.CharField(db_column='FileName', max_length=300)),
                ('filemate', models.CharField(db_column='FileMate', max_length=32)),
                ('filepath', models.CharField(db_column='FilePath', max_length=500)),
                ('fileextension', models.CharField(db_column='FileExtension', max_length=32)),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=50)),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('sort', models.IntegerField(db_column='Sort')),
                ('extension1', models.SmallIntegerField(db_column='Extension1')),
                ('extension2', models.IntegerField(db_column='Extension2')),
                ('extension3', models.CharField(blank=True, db_column='Extension3', max_length=512, null=True)),
                ('extension4', models.TextField(blank=True, db_column='Extension4', null=True)),
            ],
            options={
                'db_table': 'DNNGo_xPlugin_Multimedia',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnngoXpluginRelationships',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('tabid', models.IntegerField(db_column='TabID')),
                ('fileid', models.IntegerField(db_column='FileID')),
                ('type', models.SmallIntegerField(db_column='Type')),
                ('sort', models.IntegerField(db_column='Sort')),
                ('lasttime', models.DateTimeField(db_column='LastTime')),
                ('lastuser', models.IntegerField(db_column='LastUser')),
                ('lastip', models.CharField(db_column='LastIP', max_length=50)),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
            ],
            options={
                'db_table': 'DNNGo_xPlugin_Relationships',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnnproLicense',
            fields=[
                ('licenseid', models.AutoField(db_column='LicenseID', primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=150, null=True)),
                ('invoice', models.CharField(blank=True, db_column='Invoice', max_length=150, null=True)),
                ('expires', models.CharField(blank=True, db_column='Expires', max_length=20, null=True)),
                ('serviceenddate', models.CharField(blank=True, db_column='ServiceEndDate', max_length=20, null=True)),
                ('signature', models.CharField(blank=True, db_column='Signature', max_length=60, null=True)),
                ('hostname', models.CharField(blank=True, db_column='HostName', max_length=100, null=True)),
                ('environment', models.IntegerField(blank=True, db_column='Environment', null=True)),
                ('additionalinfo', models.TextField(blank=True, db_column='AdditionalInfo', null=True)),
            ],
            options={
                'db_table': 'DNNPRO_License',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Documents',
            fields=[
                ('itemid', models.AutoField(db_column='ItemID', primary_key=True, serialize=False)),
                ('createddate', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('url', models.CharField(blank=True, db_column='URL', max_length=250, null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=150, null=True)),
                ('category', models.CharField(blank=True, db_column='Category', max_length=50, null=True)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('ownedbyuserid', models.IntegerField(blank=True, db_column='OwnedByUserID', null=True)),
                ('modifiedbyuserid', models.IntegerField(blank=True, db_column='ModifiedByUserID', null=True)),
                ('modifieddate', models.DateTimeField(blank=True, db_column='ModifiedDate', null=True)),
                ('sortorderindex', models.IntegerField(blank=True, db_column='SortOrderIndex', null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
                ('forcedownload', models.NullBooleanField(db_column='ForceDownload')),
            ],
            options={
                'db_table': 'Documents',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eventlog',
            fields=[
                ('logguid', models.CharField(db_column='LogGUID', max_length=36)),
                ('loguserid', models.IntegerField(blank=True, db_column='LogUserID', null=True)),
                ('logusername', models.CharField(blank=True, db_column='LogUserName', max_length=50, null=True)),
                ('logportalid', models.IntegerField(blank=True, db_column='LogPortalID', null=True)),
                ('logportalname', models.CharField(blank=True, db_column='LogPortalName', max_length=100, null=True)),
                ('logcreatedate', models.DateTimeField(db_column='LogCreateDate')),
                ('logservername', models.CharField(db_column='LogServerName', max_length=50)),
                ('logproperties', models.TextField(blank=True, db_column='LogProperties', null=True)),
                ('lognotificationpending', models.NullBooleanField(db_column='LogNotificationPending')),
                ('logeventid', models.BigAutoField(db_column='LogEventID', primary_key=True, serialize=False)),
                ('exceptionhash', models.CharField(blank=True, db_column='ExceptionHash', max_length=100, null=True)),
            ],
            options={
                'db_table': 'EventLog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eventlogconfig',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('logtypeportalid', models.IntegerField(blank=True, db_column='LogTypePortalID', null=True)),
                ('loggingisactive', models.BooleanField(db_column='LoggingIsActive')),
                ('keepmostrecent', models.IntegerField(db_column='KeepMostRecent')),
                ('emailnotificationisactive', models.BooleanField(db_column='EmailNotificationIsActive')),
                ('notificationthreshold', models.IntegerField(blank=True, db_column='NotificationThreshold', null=True)),
                ('notificationthresholdtime', models.IntegerField(blank=True, db_column='NotificationThresholdTime', null=True)),
                ('notificationthresholdtimetype', models.IntegerField(blank=True, db_column='NotificationThresholdTimeType', null=True)),
                ('mailfromaddress', models.CharField(db_column='MailFromAddress', max_length=50)),
                ('mailtoaddress', models.CharField(db_column='MailToAddress', max_length=50)),
            ],
            options={
                'db_table': 'EventLogConfig',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eventlogtypes',
            fields=[
                ('logtypekey', models.CharField(db_column='LogTypeKey', max_length=35, primary_key=True, serialize=False)),
                ('logtypefriendlyname', models.CharField(db_column='LogTypeFriendlyName', max_length=50)),
                ('logtypedescription', models.CharField(db_column='LogTypeDescription', max_length=128)),
                ('logtypeowner', models.CharField(db_column='LogTypeOwner', max_length=100)),
                ('logtypecssclass', models.CharField(db_column='LogTypeCSSClass', max_length=40)),
            ],
            options={
                'db_table': 'EventLogTypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eventqueue',
            fields=[
                ('eventmessageid', models.AutoField(db_column='EventMessageID', primary_key=True, serialize=False)),
                ('eventname', models.CharField(db_column='EventName', max_length=100)),
                ('priority', models.IntegerField(db_column='Priority')),
                ('processortype', models.CharField(db_column='ProcessorType', max_length=250)),
                ('processorcommand', models.CharField(db_column='ProcessorCommand', max_length=250)),
                ('body', models.CharField(db_column='Body', max_length=250)),
                ('sender', models.CharField(db_column='Sender', max_length=250)),
                ('subscriber', models.CharField(db_column='Subscriber', max_length=100)),
                ('authorizedroles', models.CharField(db_column='AuthorizedRoles', max_length=250)),
                ('exceptionmessage', models.CharField(db_column='ExceptionMessage', max_length=250)),
                ('sentdate', models.DateTimeField(db_column='SentDate')),
                ('expirationdate', models.DateTimeField(db_column='ExpirationDate')),
                ('attributes', models.TextField(db_column='Attributes')),
                ('iscomplete', models.BooleanField(db_column='IsComplete')),
            ],
            options={
                'db_table': 'EventQueue',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('eventid', models.AutoField(db_column='EventID', primary_key=True, serialize=False)),
                ('moduleid', models.IntegerField(db_column='ModuleID')),
                ('eventdatebegin', models.DateTimeField(blank=True, db_column='EventDateBegin', null=True)),
                ('eventdateend', models.DateTimeField(blank=True, db_column='EventDateEnd', null=True)),
                ('eventtimebegin', models.DateTimeField(db_column='EventTimeBegin')),
                ('duration', models.IntegerField(db_column='Duration')),
                ('eventname', models.CharField(db_column='EventName', max_length=100)),
                ('eventdesc', models.TextField(blank=True, db_column='EventDesc', null=True)),
                ('importance', models.IntegerField(db_column='Importance')),
                ('repeattype', models.CharField(blank=True, db_column='RepeatType', max_length=10, null=True)),
                ('every', models.CharField(blank=True, db_column='Every', max_length=10, null=True)),
                ('period', models.CharField(blank=True, db_column='Period', max_length=50, null=True)),
                ('reminder', models.CharField(blank=True, db_column='Reminder', max_length=2048, null=True)),
                ('notify', models.CharField(blank=True, db_column='Notify', max_length=2048, null=True)),
                ('createdbyid', models.IntegerField(db_column='CreatedByID')),
                ('approved', models.BooleanField(db_column='Approved')),
                ('portalid', models.IntegerField(db_column='PortalID')),
                ('signups', models.BooleanField(db_column='Signups')),
                ('maxenrollment', models.IntegerField(db_column='MaxEnrollment')),
                ('enrollroleid', models.IntegerField(blank=True, db_column='EnrollRoleID', null=True)),
                ('enrollfee', models.DecimalField(db_column='EnrollFee', decimal_places=4, max_digits=19)),
                ('enrolltype', models.CharField(db_column='EnrollType', max_length=10)),
                ('paypalaccount', models.CharField(blank=True, db_column='PayPalAccount', max_length=100, null=True)),
                ('cancelled', models.BooleanField(db_column='Cancelled')),
                ('imageurl', models.CharField(blank=True, db_column='ImageURL', max_length=100, null=True)),
                ('imagetype', models.CharField(blank=True, db_column='ImageType', max_length=1, null=True)),
                ('imagewidth', models.IntegerField(blank=True, db_column='ImageWidth', null=True)),
                ('imageheight', models.IntegerField(blank=True, db_column='ImageHeight', null=True)),
                ('imagedisplay', models.BooleanField(db_column='ImageDisplay')),
                ('sendreminder', models.BooleanField(db_column='SendReminder')),
                ('remindertime', models.IntegerField(db_column='ReminderTime')),
                ('remindertimemeasurement', models.CharField(db_column='ReminderTimeMeasurement', max_length=2)),
                ('reminderfrom', models.CharField(db_column='ReminderFrom', max_length=100)),
                ('searchsubmitted', models.BooleanField(db_column='SearchSubmitted')),
                ('customfield1', models.CharField(blank=True, db_column='CustomField1', max_length=100, null=True)),
                ('customfield2', models.CharField(blank=True, db_column='CustomField2', max_length=100, null=True)),
                ('lastupdatedat', models.DateTimeField(db_column='LastUpdatedAt')),
                ('originaldatebegin', models.DateTimeField(db_column='OriginalDateBegin')),
                ('lastupdatedid', models.IntegerField(db_column='LastUpdatedID')),
                ('ownerid', models.IntegerField(db_column='OwnerID')),
                ('enrolllistview', models.BooleanField(db_column='EnrollListView')),
                ('neweventemailsent', models.BooleanField(db_column='NewEventEmailSent')),
                ('displayenddate', models.BooleanField(db_column='DisplayEndDate')),
                ('alldayevent', models.BooleanField(db_column='AllDayEvent')),
                ('detailpage', models.BooleanField(db_column='DetailPage')),
                ('detailurl', models.CharField(blank=True, db_column='DetailURL', max_length=200, null=True)),
                ('detailnewwin', models.BooleanField(db_column='DetailNewWin')),
                ('createddate', models.DateTimeField(db_column='CreatedDate')),
                ('allowanonenroll', models.BooleanField(db_column='AllowAnonEnroll')),
                ('contentitemid', models.IntegerField(blank=True, db_column='ContentItemId', null=True)),
                ('journalitem', models.BooleanField(db_column='JournalItem')),
                ('summary', models.TextField(blank=True, db_column='Summary', null=True)),
                ('sequence', models.IntegerField(db_column='Sequence')),
            ],
            options={
                'db_table': 'Events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eventscategory',
            fields=[
                ('category', models.AutoField(db_column='Category', primary_key=True, serialize=False)),
                ('categoryname', models.CharField(db_column='CategoryName', max_length=50)),
                ('color', models.CharField(blank=True, db_column='Color', max_length=10, null=True)),
                ('fontcolor', models.CharField(blank=True, db_column='FontColor', max_length=10, null=True)),
            ],
            options={
                'db_table': 'EventsCategory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eventslocation',
            fields=[
                ('location', models.AutoField(db_column='Location', primary_key=True, serialize=False)),
                ('locationname', models.CharField(db_column='LocationName', max_length=50)),
                ('mapurl', models.CharField(blank=True, db_column='MapURL', max_length=255, null=True)),
                ('street', models.CharField(blank=True, db_column='Street', max_length=50, null=True)),
                ('postalcode', models.CharField(blank=True, db_column='PostalCode', max_length=50, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=50, null=True)),
                ('region', models.CharField(blank=True, db_column='Region', max_length=50, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=50, null=True)),
            ],
            options={
                'db_table': 'EventsLocation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eventsmaster',
            fields=[
                ('masterid', models.AutoField(db_column='MasterID', primary_key=True, serialize=False)),
                ('subeventid', models.IntegerField(db_column='SubEventID')),
            ],
            options={
                'db_table': 'EventsMaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eventsnotification',
            fields=[
                ('notificationid', models.AutoField(db_column='NotificationID', primary_key=True, serialize=False)),
                ('portalaliasid', models.IntegerField(db_column='PortalAliasID')),
                ('useremail', models.CharField(db_column='UserEmail', max_length=50)),
                ('notificationsent', models.BooleanField(db_column='NotificationSent')),
                ('notifybydatetime', models.DateTimeField(db_column='NotifyByDateTime')),
                ('eventtimebegin', models.DateTimeField(db_column='EventTimeBegin')),
                ('notifylanguage', models.CharField(db_column='NotifyLanguage', max_length=10)),
                ('moduleid', models.IntegerField(db_column='ModuleID')),
                ('tabid', models.IntegerField(db_column='TabID')),
            ],
            options={
                'db_table': 'EventsNotification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eventspperrorlog',
            fields=[
                ('paypalid', models.AutoField(db_column='PayPalID', primary_key=True, serialize=False)),
                ('paypalstatus', models.CharField(blank=True, db_column='PayPalStatus', max_length=50, null=True)),
                ('paypalreason', models.CharField(blank=True, db_column='PayPalReason', max_length=100, null=True)),
                ('paypaltransid', models.CharField(blank=True, db_column='PayPalTransID', max_length=50, null=True)),
                ('paypalpayerid', models.CharField(blank=True, db_column='PayPalPayerID', max_length=50, null=True)),
                ('paypalpayerstatus', models.CharField(blank=True, db_column='PayPalPayerStatus', max_length=50, null=True)),
                ('paypalrecieveremail', models.CharField(blank=True, db_column='PayPalRecieverEmail', max_length=100, null=True)),
                ('paypaluseremail', models.CharField(blank=True, db_column='PayPalUserEmail', max_length=100, null=True)),
                ('paypalpayeremail', models.CharField(blank=True, db_column='PayPalPayerEmail', max_length=100, null=True)),
                ('paypalfirstname', models.CharField(blank=True, db_column='PayPalFirstName', max_length=50, null=True)),
                ('paypallastname', models.CharField(blank=True, db_column='PayPalLastName', max_length=50, null=True)),
                ('paypaladdress', models.CharField(blank=True, db_column='PayPalAddress', max_length=100, null=True)),
                ('paypalcity', models.CharField(blank=True, db_column='PayPalCity', max_length=50, null=True)),
                ('paypalstate', models.CharField(blank=True, db_column='PayPalState', max_length=25, null=True)),
                ('paypalzip', models.CharField(blank=True, db_column='PayPalZip', max_length=25, null=True)),
                ('paypalcountry', models.CharField(blank=True, db_column='PayPalCountry', max_length=25, null=True)),
                ('paypalcurrency', models.CharField(blank=True, db_column='PayPalCurrency', max_length=25, null=True)),
                ('paypalpaymentdate', models.DateTimeField(blank=True, db_column='PayPalPaymentDate', null=True)),
                ('paypalamount', models.DecimalField(blank=True, db_column='PayPalAmount', decimal_places=4, max_digits=19, null=True)),
                ('paypalfee', models.DecimalField(blank=True, db_column='PayPalFee', decimal_places=4, max_digits=19, null=True)),
                ('createdate', models.DateTimeField(db_column='CreateDate')),
            ],
            options={
                'db_table': 'EventsPPErrorLog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eventsrecurmaster',
            fields=[
                ('recurmasterid', models.AutoField(db_column='RecurMasterID', primary_key=True, serialize=False)),
                ('portalid', models.IntegerField(db_column='PortalID')),
                ('rrule', models.CharField(db_column='RRULE', max_length=1000)),
                ('dtstart', models.DateTimeField(db_column='DTSTART')),
                ('duration', models.CharField(db_column='Duration', max_length=50)),
                ('until', models.DateTimeField(db_column='Until')),
                ('eventname', models.CharField(db_column='EventName', max_length=100)),
                ('eventdesc', models.TextField(blank=True, db_column='EventDesc', null=True)),
                ('importance', models.IntegerField(db_column='Importance')),
                ('reminder', models.CharField(blank=True, db_column='Reminder', max_length=2048, null=True)),
                ('notify', models.CharField(blank=True, db_column='Notify', max_length=2048, null=True)),
                ('approved', models.BooleanField(db_column='Approved')),
                ('signups', models.BooleanField(db_column='Signups')),
                ('maxenrollment', models.IntegerField(db_column='MaxEnrollment')),
                ('enrollroleid', models.IntegerField(blank=True, db_column='EnrollRoleID', null=True)),
                ('enrollfee', models.DecimalField(db_column='EnrollFee', decimal_places=4, max_digits=19)),
                ('enrolltype', models.CharField(db_column='EnrollType', max_length=10)),
                ('paypalaccount', models.CharField(blank=True, db_column='PayPalAccount', max_length=100, null=True)),
                ('imageurl', models.CharField(blank=True, db_column='ImageURL', max_length=100, null=True)),
                ('imagetype', models.CharField(blank=True, db_column='ImageType', max_length=1, null=True)),
                ('imagewidth', models.IntegerField(blank=True, db_column='ImageWidth', null=True)),
                ('imageheight', models.IntegerField(blank=True, db_column='ImageHeight', null=True)),
                ('imagedisplay', models.BooleanField(db_column='ImageDisplay')),
                ('sendreminder', models.BooleanField(db_column='SendReminder')),
                ('remindertime', models.IntegerField(db_column='ReminderTime')),
                ('remindertimemeasurement', models.CharField(db_column='ReminderTimeMeasurement', max_length=2)),
                ('reminderfrom', models.CharField(db_column='ReminderFrom', max_length=100)),
                ('customfield1', models.CharField(blank=True, db_column='CustomField1', max_length=100, null=True)),
                ('customfield2', models.CharField(blank=True, db_column='CustomField2', max_length=100, null=True)),
                ('enrolllistview', models.BooleanField(db_column='EnrollListView')),
                ('displayenddate', models.BooleanField(db_column='DisplayEndDate')),
                ('alldayevent', models.BooleanField(db_column='AllDayEvent')),
                ('ownerid', models.IntegerField(db_column='OwnerID')),
                ('culturename', models.CharField(db_column='CultureName', max_length=10)),
                ('createdbyid', models.IntegerField(db_column='CreatedByID')),
                ('createddate', models.DateTimeField(db_column='CreatedDate')),
                ('updatedbyid', models.IntegerField(db_column='UpdatedByID')),
                ('updateddate', models.DateTimeField(db_column='UpdatedDate')),
                ('detailpage', models.BooleanField(db_column='DetailPage')),
                ('detailurl', models.CharField(blank=True, db_column='DetailURL', max_length=200, null=True)),
                ('detailnewwin', models.BooleanField(db_column='DetailNewWin')),
                ('eventtimezoneid', models.CharField(blank=True, db_column='EventTimeZoneId', max_length=100, null=True)),
                ('allowanonenroll', models.BooleanField(db_column='AllowAnonEnroll')),
                ('contentitemid', models.IntegerField(blank=True, db_column='ContentItemId', null=True)),
                ('summary', models.TextField(blank=True, db_column='Summary', null=True)),
                ('sequence', models.IntegerField(db_column='Sequence')),
            ],
            options={
                'db_table': 'EventsRecurMaster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eventssignups',
            fields=[
                ('signupid', models.AutoField(db_column='SignupID', primary_key=True, serialize=False)),
                ('moduleid', models.IntegerField(db_column='ModuleID')),
                ('userid', models.IntegerField(db_column='UserID')),
                ('approved', models.BooleanField(db_column='Approved')),
                ('paypalstatus', models.CharField(blank=True, db_column='PayPalStatus', max_length=50, null=True)),
                ('paypalreason', models.CharField(blank=True, db_column='PayPalReason', max_length=100, null=True)),
                ('paypaltransid', models.CharField(blank=True, db_column='PayPalTransID', max_length=50, null=True)),
                ('paypalpayerid', models.CharField(blank=True, db_column='PayPalPayerID', max_length=50, null=True)),
                ('paypalpayerstatus', models.CharField(blank=True, db_column='PayPalPayerStatus', max_length=50, null=True)),
                ('paypalrecieveremail', models.CharField(blank=True, db_column='PayPalRecieverEmail', max_length=100, null=True)),
                ('paypaluseremail', models.CharField(blank=True, db_column='PayPalUserEmail', max_length=100, null=True)),
                ('paypalpayeremail', models.CharField(blank=True, db_column='PayPalPayerEmail', max_length=100, null=True)),
                ('paypalfirstname', models.CharField(blank=True, db_column='PayPalFirstName', max_length=50, null=True)),
                ('paypallastname', models.CharField(blank=True, db_column='PayPalLastName', max_length=50, null=True)),
                ('paypaladdress', models.CharField(blank=True, db_column='PayPalAddress', max_length=100, null=True)),
                ('paypalcity', models.CharField(blank=True, db_column='PayPalCity', max_length=50, null=True)),
                ('paypalstate', models.CharField(blank=True, db_column='PayPalState', max_length=25, null=True)),
                ('paypalzip', models.CharField(blank=True, db_column='PayPalZip', max_length=25, null=True)),
                ('paypalcountry', models.CharField(blank=True, db_column='PayPalCountry', max_length=25, null=True)),
                ('paypalcurrency', models.CharField(blank=True, db_column='PayPalCurrency', max_length=25, null=True)),
                ('paypalpaymentdate', models.DateTimeField(blank=True, db_column='PayPalPaymentDate', null=True)),
                ('paypalamount', models.DecimalField(blank=True, db_column='PayPalAmount', decimal_places=4, max_digits=19, null=True)),
                ('paypalfee', models.DecimalField(blank=True, db_column='PayPalFee', decimal_places=4, max_digits=19, null=True)),
                ('noenrolees', models.IntegerField(db_column='NoEnrolees')),
                ('createdate', models.DateTimeField(db_column='CreateDate')),
                ('anonemail', models.CharField(blank=True, db_column='AnonEmail', max_length=256, null=True)),
                ('anonname', models.CharField(blank=True, db_column='AnonName', max_length=128, null=True)),
                ('anontelephone', models.CharField(blank=True, db_column='AnonTelephone', max_length=128, null=True)),
                ('anonculture', models.CharField(blank=True, db_column='AnonCulture', max_length=10, null=True)),
                ('anontimezoneid', models.CharField(blank=True, db_column='AnonTimeZoneId', max_length=100, null=True)),
                ('firstname', models.CharField(blank=True, db_column='FirstName', max_length=50, null=True)),
                ('lastname', models.CharField(blank=True, db_column='LastName', max_length=50, null=True)),
                ('company', models.CharField(blank=True, db_column='Company', max_length=50, null=True)),
                ('jobtitle', models.CharField(blank=True, db_column='JobTitle', max_length=50, null=True)),
                ('referencenumber', models.CharField(blank=True, db_column='ReferenceNumber', max_length=50, null=True)),
                ('street', models.CharField(blank=True, db_column='Street', max_length=50, null=True)),
                ('postalcode', models.CharField(blank=True, db_column='PostalCode', max_length=50, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=50, null=True)),
                ('region', models.CharField(blank=True, db_column='Region', max_length=50, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=50, null=True)),
            ],
            options={
                'db_table': 'EventsSignups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eventssubscription',
            fields=[
                ('subscriptionid', models.AutoField(db_column='SubscriptionID', primary_key=True, serialize=False)),
                ('portalid', models.IntegerField(db_column='PortalID')),
            ],
            options={
                'db_table': 'EventsSubscription',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Exceptions',
            fields=[
                ('exceptionhash', models.CharField(db_column='ExceptionHash', max_length=100, primary_key=True, serialize=False)),
                ('message', models.CharField(db_column='Message', max_length=500)),
                ('stacktrace', models.TextField(blank=True, db_column='StackTrace', null=True)),
                ('innermessage', models.CharField(blank=True, db_column='InnerMessage', max_length=500, null=True)),
                ('innerstacktrace', models.TextField(blank=True, db_column='InnerStackTrace', null=True)),
                ('source', models.CharField(blank=True, db_column='Source', max_length=500, null=True)),
            ],
            options={
                'db_table': 'Exceptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Extensionurlproviderconfiguration',
            fields=[
                ('extensionurlproviderid', models.IntegerField(db_column='ExtensionUrlProviderID', primary_key=True, serialize=False)),
                ('portalid', models.IntegerField(db_column='PortalID')),
            ],
            options={
                'db_table': 'ExtensionUrlProviderConfiguration',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Extensionurlproviders',
            fields=[
                ('extensionurlproviderid', models.AutoField(db_column='ExtensionUrlProviderID', primary_key=True, serialize=False)),
                ('providername', models.CharField(db_column='ProviderName', max_length=150)),
                ('providertype', models.CharField(db_column='ProviderType', max_length=1000)),
                ('settingscontrolsrc', models.CharField(blank=True, db_column='SettingsControlSrc', max_length=1000, null=True)),
                ('isactive', models.BooleanField(db_column='IsActive')),
                ('rewriteallurls', models.BooleanField(db_column='RewriteAllUrls')),
                ('redirectallurls', models.BooleanField(db_column='RedirectAllUrls')),
                ('replaceallurls', models.BooleanField(db_column='ReplaceAllUrls')),
                ('desktopmoduleid', models.IntegerField(blank=True, db_column='DesktopModuleId', null=True)),
            ],
            options={
                'db_table': 'ExtensionUrlProviders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Extensionurlprovidersetting',
            fields=[
                ('extensionurlproviderid', models.IntegerField(db_column='ExtensionUrlProviderID', primary_key=True, serialize=False)),
                ('portalid', models.IntegerField(db_column='PortalID')),
                ('settingname', models.CharField(db_column='SettingName', max_length=100)),
                ('settingvalue', models.CharField(db_column='SettingValue', max_length=2000)),
            ],
            options={
                'db_table': 'ExtensionUrlProviderSetting',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Extensionurlprovidertab',
            fields=[
                ('extensionurlproviderid', models.IntegerField(db_column='ExtensionUrlProviderID', primary_key=True, serialize=False)),
                ('portalid', models.IntegerField(db_column='PortalID')),
                ('tabid', models.IntegerField(db_column='TabID')),
                ('isactive', models.BooleanField(db_column='IsActive')),
            ],
            options={
                'db_table': 'ExtensionUrlProviderTab',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Faqs',
            fields=[
                ('itemid', models.AutoField(db_column='ItemID', primary_key=True, serialize=False)),
                ('moduleid', models.IntegerField(db_column='ModuleId', null=True)),
                ('createdbyuser', models.CharField(blank=True, db_column='CreatedByUser', max_length=100, null=True)),
                ('createddate', models.DateTimeField(db_column='CreatedDate')),
                ('question', models.CharField(db_column='Question', max_length=400)),
                ('answer', models.TextField(blank=True, db_column='Answer', null=True)),
                ('categoryid', models.IntegerField(blank=True, db_column='CategoryId', null=True)),
                ('datemodified', models.DateTimeField(db_column='DateModified')),
                ('viewcount', models.IntegerField(db_column='ViewCount')),
                ('vieworder', models.IntegerField(db_column='ViewOrder')),
                ('faqhide', models.BooleanField(db_column='FaqHide')),
                ('publishdate', models.DateTimeField(blank=True, db_column='PublishDate', null=True)),
                ('expiredate', models.DateTimeField(blank=True, db_column='ExpireDate', null=True)),
            ],
            options={
                'db_table': 'FAQs',
                # 'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Faqscategory',
            fields=[
                ('faqcategoryid', models.AutoField(db_column='FaqCategoryId', primary_key=True, serialize=False)),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('faqcategoryname', models.CharField(db_column='FaqCategoryName', max_length=100)),
                ('faqcategorydescription', models.CharField(db_column='FaqCategoryDescription', max_length=250)),
                ('faqcategoryparentid', models.IntegerField(blank=True, db_column='FaqCategoryParentId', null=True)),
                ('vieworder', models.IntegerField(db_column='ViewOrder')),
            ],
            options={
                'db_table': 'FAQsCategory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('status', models.IntegerField(db_column='Status')),
                ('subject', models.CharField(blank=True, db_column='Subject', max_length=200, null=True)),
                ('senderemail', models.CharField(db_column='SenderEmail', max_length=256)),
                ('approvedby', models.IntegerField(blank=True, db_column='ApprovedBy', null=True)),
                ('message', models.TextField(db_column='Message')),
                ('createdondateserver', models.DateTimeField(db_column='CreatedOnDateServer')),
                ('feedbackid', models.AutoField(db_column='FeedbackID', primary_key=True, serialize=False)),
                ('portalid', models.IntegerField(db_column='PortalID')),
                ('categoryid', models.CharField(blank=True, db_column='CategoryID', max_length=100, null=True)),
                ('sendername', models.CharField(blank=True, db_column='SenderName', max_length=200, null=True)),
                ('publishedondate', models.DateTimeField(blank=True, db_column='PublishedOnDate', null=True)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('senderstreet', models.CharField(blank=True, db_column='SenderStreet', max_length=50, null=True)),
                ('sendercity', models.CharField(blank=True, db_column='SenderCity', max_length=50, null=True)),
                ('senderregion', models.CharField(blank=True, db_column='SenderRegion', max_length=50, null=True)),
                ('sendercountry', models.CharField(blank=True, db_column='SenderCountry', max_length=50, null=True)),
                ('senderpostalcode', models.CharField(blank=True, db_column='SenderPostalCode', max_length=50, null=True)),
                ('sendertelephone', models.CharField(blank=True, db_column='SenderTelephone', max_length=20, null=True)),
                ('senderremoteaddr', models.CharField(blank=True, db_column='SenderRemoteAddr', max_length=50, null=True)),
                ('createdondate', models.DateTimeField(db_column='CreatedOnDate')),
                ('referrer', models.CharField(blank=True, db_column='Referrer', max_length=255, null=True)),
                ('useragent', models.CharField(blank=True, db_column='UserAgent', max_length=255, null=True)),
                ('contextkey', models.CharField(blank=True, db_column='ContextKey', max_length=200, null=True)),
            ],
            options={
                'db_table': 'Feedback',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Feedbacklist',
            fields=[
                ('listid', models.AutoField(db_column='ListID', primary_key=True, serialize=False)),
                ('portalid', models.IntegerField(db_column='PortalID')),
                ('listtype', models.IntegerField(blank=True, db_column='ListType', null=True)),
                ('isactive', models.NullBooleanField(db_column='IsActive')),
                ('name', models.CharField(blank=True, db_column='Name', max_length=50, null=True)),
                ('listvalue', models.CharField(blank=True, db_column='ListValue', max_length=100, null=True)),
                ('sortorder', models.IntegerField(blank=True, db_column='SortOrder', null=True)),
                ('portal', models.BooleanField(db_column='Portal')),
                ('moduleid', models.IntegerField(db_column='ModuleID')),
            ],
            options={
                'db_table': 'FeedbackList',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('fileid', models.AutoField(db_column='FileId', primary_key=True, serialize=False)),
                ('filename', models.CharField(db_column='FileName', max_length=246)),
                ('extension', models.CharField(db_column='Extension', max_length=100)),
                ('size', models.IntegerField(db_column='Size')),
                ('width', models.IntegerField(blank=True, db_column='Width', null=True)),
                ('height', models.IntegerField(blank=True, db_column='Height', null=True)),
                ('contenttype', models.CharField(db_column='ContentType', max_length=200)),
                ('content', models.BinaryField(blank=True, db_column='Content', null=True)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
                ('uniqueid', models.CharField(db_column='UniqueId', max_length=36, unique=True)),
                ('versionguid', models.CharField(db_column='VersionGuid', max_length=36)),
                ('sha1hash', models.CharField(blank=True, db_column='SHA1Hash', max_length=40, null=True)),
                ('lastmodificationtime', models.DateTimeField(db_column='LastModificationTime')),
                ('folder', models.CharField(blank=True, db_column='Folder', max_length=246, null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=256, null=True)),
                ('startdate', models.CharField(db_column='StartDate', max_length=10)),
                ('enablepublishperiod', models.BooleanField(db_column='EnablePublishPeriod')),
                ('enddate', models.CharField(blank=True, db_column='EndDate', max_length=10, null=True)),
                ('publishedversion', models.IntegerField(db_column='PublishedVersion')),
                ('hasbeenpublished', models.BooleanField(db_column='HasBeenPublished')),
            ],
            options={
                'db_table': 'Files',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Filestatistics',
            fields=[
                ('statid', models.AutoField(db_column='StatId', primary_key=True, serialize=False)),
                ('statdate', models.DateTimeField(db_column='StatDate')),
            ],
            options={
                'db_table': 'FileStatistics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Foldermappings',
            fields=[
                ('foldermappingid', models.AutoField(db_column='FolderMappingID', primary_key=True, serialize=False)),
                ('mappingname', models.CharField(db_column='MappingName', max_length=50)),
                ('folderprovidertype', models.CharField(db_column='FolderProviderType', max_length=50)),
                ('priority', models.IntegerField(blank=True, db_column='Priority', null=True)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'FolderMappings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Folderpermission',
            fields=[
                ('folderpermissionid', models.AutoField(db_column='FolderPermissionID', primary_key=True, serialize=False)),
                ('allowaccess', models.BooleanField(db_column='AllowAccess')),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'FolderPermission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Folders',
            fields=[
                ('folderid', models.AutoField(db_column='FolderID', primary_key=True, serialize=False)),
                ('folderpath', models.CharField(db_column='FolderPath', max_length=300)),
                ('storagelocation', models.IntegerField(db_column='StorageLocation')),
                ('isprotected', models.BooleanField(db_column='IsProtected')),
                ('iscached', models.BooleanField(db_column='IsCached')),
                ('lastupdated', models.DateTimeField(blank=True, db_column='LastUpdated', null=True)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
                ('uniqueid', models.CharField(db_column='UniqueId', max_length=36, unique=True)),
                ('versionguid', models.CharField(db_column='VersionGuid', max_length=36)),
                ('parentid', models.IntegerField(blank=True, db_column='ParentID', null=True)),
                ('isversioned', models.BooleanField(db_column='IsVersioned')),
                ('mappedpath', models.CharField(blank=True, db_column='MappedPath', max_length=300, null=True)),
            ],
            options={
                'db_table': 'Folders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hostsettings',
            fields=[
                ('settingname', models.CharField(db_column='SettingName', max_length=50, primary_key=True, serialize=False)),
                ('settingvalue', models.CharField(db_column='SettingValue', max_length=256)),
                ('settingissecure', models.BooleanField(db_column='SettingIsSecure')),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'HostSettings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Htmltext',
            fields=[
                ('itemid', models.AutoField(db_column='ItemID', primary_key=True, serialize=False)),
                ('moduleid', models.IntegerField(db_column='ModuleId', null=True)),
                ('content', models.TextField(blank=True, db_column='Content', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', null=True)),
                ('stateid', models.IntegerField(blank=True, db_column='StateID', null=True)),
                ('ispublished', models.NullBooleanField(db_column='IsPublished')),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
                ('summary', models.TextField(blank=True, db_column='Summary', null=True)),
                ('publishdate', models.DateTimeField(blank=True, db_column='PublishDate', null=True)),
            ],
            options={
                'db_table': 'HtmlText',
                # 'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Htmltextlog',
            fields=[
                ('htmltextlogid', models.AutoField(db_column='HtmlTextLogID', primary_key=True, serialize=False)),
                ('stateid', models.IntegerField(db_column='StateID')),
                ('comment', models.CharField(blank=True, db_column='Comment', max_length=4000, null=True)),
                ('approved', models.BooleanField(db_column='Approved')),
                ('createdbyuserid', models.IntegerField(db_column='CreatedByUserID')),
                ('createdondate', models.DateTimeField(db_column='CreatedOnDate')),
            ],
            options={
                'db_table': 'HtmlTextLog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipfilter',
            fields=[
                ('ipfilterid', models.AutoField(db_column='IPFilterID', primary_key=True, serialize=False)),
                ('ipaddress', models.CharField(blank=True, db_column='IPAddress', max_length=50, null=True)),
                ('subnetmask', models.CharField(blank=True, db_column='SubnetMask', max_length=50, null=True)),
                ('ruletype', models.SmallIntegerField(blank=True, db_column='RuleType', null=True)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'IPFilter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Javascriptlibraries',
            fields=[
                ('javascriptlibraryid', models.AutoField(db_column='JavaScriptLibraryID', primary_key=True, serialize=False)),
                ('libraryname', models.CharField(db_column='LibraryName', max_length=200)),
                ('version', models.CharField(db_column='Version', max_length=50)),
                ('filename', models.CharField(db_column='FileName', max_length=100)),
                ('objectname', models.CharField(db_column='ObjectName', max_length=100)),
                ('preferredscriptlocation', models.IntegerField(db_column='PreferredScriptLocation')),
                ('cdnpath', models.CharField(db_column='CDNPath', max_length=250)),
            ],
            options={
                'db_table': 'JavaScriptLibraries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('journalid', models.AutoField(db_column='JournalId', primary_key=True, serialize=False)),
                ('userid', models.IntegerField(blank=True, db_column='UserId', null=True)),
                ('datecreated', models.DateTimeField(blank=True, db_column='DateCreated', null=True)),
                ('dateupdated', models.DateTimeField(blank=True, db_column='DateUpdated', null=True)),
                ('portalid', models.IntegerField(blank=True, db_column='PortalId', null=True)),
                ('profileid', models.IntegerField(db_column='ProfileId')),
                ('groupid', models.IntegerField(db_column='GroupId')),
                ('title', models.CharField(blank=True, db_column='Title', max_length=255, null=True)),
                ('summary', models.CharField(blank=True, db_column='Summary', max_length=2000, null=True)),
                ('itemdata', models.CharField(blank=True, db_column='ItemData', max_length=2000, null=True)),
                ('imageurl', models.CharField(blank=True, db_column='ImageURL', max_length=255, null=True)),
                ('objectkey', models.CharField(blank=True, db_column='ObjectKey', max_length=255, null=True)),
                ('accesskey', models.CharField(blank=True, db_column='AccessKey', max_length=36, null=True)),
                ('contentitemid', models.IntegerField(blank=True, db_column='ContentItemId', null=True)),
                ('isdeleted', models.BooleanField(db_column='IsDeleted')),
                ('commentsdisabled', models.BooleanField(db_column='CommentsDisabled')),
                ('commentshidden', models.BooleanField(db_column='CommentsHidden')),
            ],
            options={
                'db_table': 'Journal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='JournalAccess',
            fields=[
                ('journalaccessid', models.AutoField(db_column='JournalAccessId', primary_key=True, serialize=False)),
                ('journaltypeid', models.IntegerField(db_column='JournalTypeId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('name', models.CharField(db_column='Name', max_length=50)),
                ('accesskey', models.CharField(db_column='AccessKey', max_length=36)),
                ('isenabled', models.BooleanField(db_column='IsEnabled')),
                ('datecreated', models.DateTimeField(db_column='DateCreated')),
            ],
            options={
                'db_table': 'Journal_Access',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='JournalComments',
            fields=[
                ('commentid', models.AutoField(db_column='CommentId', primary_key=True, serialize=False)),
                ('userid', models.IntegerField(db_column='UserId')),
                ('comment', models.CharField(blank=True, db_column='Comment', max_length=2000, null=True)),
                ('datecreated', models.DateTimeField(db_column='DateCreated')),
                ('dateupdated', models.DateTimeField(db_column='DateUpdated')),
                ('commentxml', models.TextField(blank=True, db_column='CommentXML', null=True)),
            ],
            options={
                'db_table': 'Journal_Comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='JournalData',
            fields=[
                ('journaldataid', models.AutoField(db_column='JournalDataId', primary_key=True, serialize=False)),
                ('journalxml', models.TextField(db_column='JournalXML')),
            ],
            options={
                'db_table': 'Journal_Data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='JournalSecurity',
            fields=[
                ('journalsecurityid', models.AutoField(db_column='JournalSecurityId', primary_key=True, serialize=False)),
                ('journalid', models.IntegerField(db_column='JournalId')),
                ('securitykey', models.CharField(db_column='SecurityKey', max_length=50)),
            ],
            options={
                'db_table': 'Journal_Security',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='JournalTypefilters',
            fields=[
                ('journaltypefilterid', models.AutoField(db_column='JournalTypeFilterId', primary_key=True, serialize=False)),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('journaltypeid', models.IntegerField(db_column='JournalTypeId')),
            ],
            options={
                'db_table': 'Journal_TypeFilters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='JournalTypes',
            fields=[
                ('journaltypeid', models.IntegerField(db_column='JournalTypeId', primary_key=True, serialize=False)),
                ('journaltype', models.CharField(blank=True, db_column='JournalType', max_length=25, null=True)),
                ('icon', models.CharField(blank=True, max_length=25, null=True)),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('isenabled', models.BooleanField(db_column='IsEnabled')),
                ('appliestoprofile', models.BooleanField(db_column='AppliesToProfile')),
                ('appliestogroup', models.BooleanField(db_column='AppliesToGroup')),
                ('appliestostream', models.BooleanField(db_column='AppliesToStream')),
                ('options', models.TextField(blank=True, db_column='Options', null=True)),
                ('supportsnotify', models.BooleanField(db_column='SupportsNotify')),
                ('enablecomments', models.BooleanField(db_column='EnableComments')),
            ],
            options={
                'db_table': 'Journal_Types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Languagepacks',
            fields=[
                ('languagepackid', models.AutoField(db_column='LanguagePackID', primary_key=True, serialize=False)),
                ('dependentpackageid', models.IntegerField(db_column='DependentPackageID')),
                ('languageid', models.IntegerField(db_column='LanguageID')),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'LanguagePacks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Languages',
            fields=[
                ('languageid', models.AutoField(db_column='LanguageID', primary_key=True, serialize=False)),
                ('culturecode', models.CharField(db_column='CultureCode', max_length=50, unique=True)),
                ('culturename', models.CharField(db_column='CultureName', max_length=200)),
                ('fallbackculture', models.CharField(blank=True, db_column='FallbackCulture', max_length=50, null=True)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'Languages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lists',
            fields=[
                ('entryid', models.AutoField(db_column='EntryID', primary_key=True, serialize=False)),
                ('listname', models.CharField(db_column='ListName', max_length=50)),
                ('value', models.CharField(db_column='Value', max_length=100)),
                ('text', models.CharField(db_column='Text', max_length=150)),
                ('parentid', models.IntegerField(db_column='ParentID')),
                ('level', models.IntegerField(db_column='Level')),
                ('sortorder', models.IntegerField(db_column='SortOrder')),
                ('definitionid', models.IntegerField(db_column='DefinitionID')),
                ('description', models.CharField(blank=True, db_column='Description', max_length=500, null=True)),
                ('portalid', models.IntegerField(db_column='PortalID')),
                ('systemlist', models.BooleanField(db_column='SystemList')),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'Lists',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MechanicsBadge',
            fields=[
                ('badgeid', models.AutoField(db_column='BadgeId', primary_key=True, serialize=False)),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('badgename', models.CharField(blank=True, db_column='BadgeName', max_length=100, null=True)),
                ('tier', models.IntegerField(db_column='Tier')),
                ('timeframeindays', models.IntegerField(db_column='TimeFrameInDays')),
                ('imagefileid', models.IntegerField(db_column='ImageFileId')),
                ('createdbyuserid', models.IntegerField(db_column='CreatedByUserID')),
                ('createdondate', models.DateTimeField(db_column='CreatedOnDate')),
                ('lastmodifiedbyuserid', models.IntegerField(db_column='LastModifiedByUserID')),
                ('lastmodifiedondate', models.DateTimeField(db_column='LastModifiedOnDate')),
            ],
            options={
                'db_table': 'Mechanics_Badge',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MechanicsBadgescoactdef',
            fields=[
                ('badgesadid', models.AutoField(db_column='BadgeSadId', primary_key=True, serialize=False)),
                ('numberoftimes', models.IntegerField(db_column='NumberOfTimes')),
                ('createdondate', models.DateTimeField(db_column='CreatedOnDate')),
            ],
            options={
                'db_table': 'Mechanics_BadgeScoActDef',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MechanicsPrivilege',
            fields=[
                ('privilegeid', models.AutoField(db_column='PrivilegeId', primary_key=True, serialize=False)),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('reputationpoints', models.IntegerField(db_column='ReputationPoints')),
                ('createdbyuserid', models.IntegerField(db_column='CreatedByUserID')),
                ('createdondate', models.DateTimeField(db_column='CreatedOnDate')),
                ('lastmodifiedbyuserid', models.IntegerField(db_column='LastModifiedByUserID')),
                ('lastmodifiedondate', models.DateTimeField(db_column='LastModifiedOnDate')),
            ],
            options={
                'db_table': 'Mechanics_Privilege',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MechanicsPrivilegedefinition',
            fields=[
                ('privilegedefid', models.AutoField(db_column='PrivilegeDefId', primary_key=True, serialize=False)),
                ('privilegename', models.CharField(blank=True, db_column='PrivilegeName', max_length=100, null=True)),
                ('defaultreputationpoints', models.IntegerField(db_column='DefaultReputationPoints')),
                ('desktopmoduleid', models.IntegerField(db_column='DesktopModuleId')),
            ],
            options={
                'db_table': 'Mechanics_PrivilegeDefinition',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MechanicsScoringaction',
            fields=[
                ('scoringactionid', models.AutoField(db_column='ScoringActionId', primary_key=True, serialize=False)),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('experiencepoints', models.IntegerField(db_column='ExperiencePoints')),
                ('reputationpoints', models.IntegerField(db_column='ReputationPoints')),
                ('maxcount', models.IntegerField(db_column='MaxCount')),
                ('interval', models.IntegerField(db_column='Interval')),
                ('createdbyuserid', models.IntegerField(db_column='CreatedByUserID')),
                ('createdondate', models.DateTimeField(db_column='CreatedOnDate')),
                ('lastmodifiedbyuserid', models.IntegerField(db_column='LastModifiedByUserID')),
                ('lastmodifiedondate', models.DateTimeField(db_column='LastModifiedOnDate')),
            ],
            options={
                'db_table': 'Mechanics_ScoringAction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MechanicsScoringactiondefinition',
            fields=[
                ('scoringactiondefid', models.AutoField(db_column='ScoringActionDefId', primary_key=True, serialize=False)),
                ('actionname', models.CharField(db_column='ActionName', max_length=100)),
                ('defaultexperiencepoints', models.IntegerField(db_column='DefaultExperiencePoints')),
                ('defaultreputationpoints', models.IntegerField(db_column='DefaultReputationPoints')),
                ('defaultmaxcount', models.IntegerField(db_column='DefaultMaxCount')),
                ('defaultinterval', models.IntegerField(db_column='DefaultInterval')),
                ('desktopmoduleid', models.IntegerField(db_column='DesktopModuleId')),
                ('actiontype', models.IntegerField(db_column='ActionType')),
                ('packageid', models.IntegerField(db_column='PackageId')),
                ('isenabled', models.BooleanField(db_column='IsEnabled')),
            ],
            options={
                'db_table': 'Mechanics_ScoringActionDefinition',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MechanicsUserbadge',
            fields=[
                ('userbadgeid', models.AutoField(db_column='UserBadgeId', primary_key=True, serialize=False)),
                ('userid', models.IntegerField(db_column='UserId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('createdondate', models.DateTimeField(db_column='CreatedOnDate')),
            ],
            options={
                'db_table': 'Mechanics_UserBadge',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MechanicsUserscoring',
            fields=[
                ('userscoringid', models.AutoField(db_column='UserScoringId', primary_key=True, serialize=False)),
                ('userid', models.IntegerField(db_column='UserId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('experiencepoints', models.IntegerField(db_column='ExperiencePoints')),
                ('reputationpoints', models.IntegerField(db_column='ReputationPoints')),
                ('topreputationpoints', models.IntegerField(db_column='TopReputationPoints')),
                ('dailyreputationpoints', models.IntegerField(db_column='DailyReputationPoints')),
                ('bestreputationpoints', models.IntegerField(db_column='BestReputationPoints')),
                ('contentviewedcount', models.IntegerField(db_column='ContentViewedCount')),
                ('contentinteractedcount', models.IntegerField(db_column='ContentInteractedCount')),
                ('contentcreatedcount', models.IntegerField(db_column='ContentCreatedCount')),
                ('contenteditedcount', models.IntegerField(db_column='ContentEditedCount')),
                ('contentdeletedcount', models.IntegerField(db_column='ContentDeletedCount')),
                ('contentflaggedcount', models.IntegerField(db_column='ContentFlaggedCount')),
                ('createdondate', models.DateTimeField(db_column='CreatedOnDate')),
                ('lastmodifiedondate', models.DateTimeField(db_column='LastModifiedOnDate')),
            ],
            options={
                'db_table': 'Mechanics_UserScoring',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MechanicsUserscoringlog',
            fields=[
                ('userscoringlogid', models.AutoField(db_column='UserScoringLogId', primary_key=True, serialize=False)),
                ('userid', models.IntegerField(db_column='UserId')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('contentitemid', models.IntegerField(blank=True, db_column='ContentItemId', null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=400, null=True)),
                ('context', models.CharField(blank=True, db_column='Context', max_length=1500, null=True)),
                ('experiencepoints', models.IntegerField(db_column='ExperiencePoints')),
                ('reputationpoints', models.IntegerField(db_column='ReputationPoints')),
                ('createdondate', models.DateTimeField(db_column='CreatedOnDate')),
                ('groupid', models.DecimalField(db_column='GroupId', decimal_places=0, max_digits=18)),
            ],
            options={
                'db_table': 'Mechanics_UserScoringLog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MechanicsVisitorscoring',
            fields=[
                ('visitorscoringid', models.AutoField(db_column='VisitorScoringId', primary_key=True, serialize=False)),
                ('visitorid', models.CharField(db_column='VisitorId', max_length=36)),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('experiencepoints', models.IntegerField(db_column='ExperiencePoints')),
                ('reputationpoints', models.IntegerField(db_column='ReputationPoints')),
                ('createdondate', models.DateTimeField(db_column='CreatedOnDate')),
                ('lastmodifiedondate', models.DateTimeField(db_column='LastModifiedOnDate')),
            ],
            options={
                'db_table': 'Mechanics_VisitorScoring',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MechanicsVisitorscoringlog',
            fields=[
                ('visitorscoringlogid', models.AutoField(db_column='VisitorScoringLogId', primary_key=True, serialize=False)),
                ('visitorid', models.CharField(db_column='VisitorId', max_length=36)),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('contentitemid', models.IntegerField(blank=True, db_column='ContentItemId', null=True)),
                ('context', models.CharField(blank=True, db_column='Context', max_length=1500, null=True)),
                ('experiencepoints', models.IntegerField(db_column='ExperiencePoints')),
                ('reputationpoints', models.IntegerField(db_column='ReputationPoints')),
                ('groupid', models.IntegerField(db_column='GroupId')),
                ('createdondate', models.DateTimeField(db_column='CreatedOnDate')),
            ],
            options={
                'db_table': 'Mechanics_VisitorScoringLog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MessagingMessages',
            fields=[
                ('messageid', models.BigAutoField(db_column='MessageID', primary_key=True, serialize=False)),
                ('portalid', models.IntegerField(db_column='PortalID')),
                ('fromuserid', models.IntegerField(db_column='FromUserID')),
                ('tousername', models.CharField(blank=True, db_column='ToUserName', max_length=50, null=True)),
                ('fromusername', models.CharField(blank=True, db_column='FromUserName', max_length=50, null=True)),
                ('touserid', models.IntegerField(blank=True, db_column='ToUserID', null=True)),
                ('toroleid', models.IntegerField(blank=True, db_column='ToRoleID', null=True)),
                ('status', models.SmallIntegerField(db_column='Status')),
                ('subject', models.TextField(blank=True, db_column='Subject', null=True)),
                ('body', models.TextField(blank=True, db_column='Body', null=True)),
                ('date', models.DateTimeField(db_column='Date')),
                ('conversation', models.CharField(db_column='Conversation', max_length=36)),
                ('replyto', models.BigIntegerField(blank=True, db_column='ReplyTo', null=True)),
                ('allowreply', models.BooleanField(db_column='AllowReply')),
                ('skipportal', models.BooleanField(db_column='SkipPortal')),
                ('emailsent', models.BooleanField(db_column='EmailSent')),
                ('emailsentdate', models.DateTimeField(blank=True, db_column='EmailSentDate', null=True)),
                ('emailschedulerinstance', models.CharField(blank=True, db_column='EmailSchedulerInstance', max_length=36, null=True)),
            ],
            options={
                'db_table': 'Messaging_Messages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Metadata',
            fields=[
                ('metadataid', models.AutoField(db_column='MetaDataID', primary_key=True, serialize=False)),
                ('metadataname', models.CharField(db_column='MetaDataName', max_length=100, unique=True)),
                ('metadatadescription', models.CharField(blank=True, db_column='MetaDataDescription', max_length=2500, null=True)),
            ],
            options={
                'db_table': 'MetaData',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MobilePreviewprofiles',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=50)),
                ('width', models.IntegerField(db_column='Width')),
                ('height', models.IntegerField(db_column='Height')),
                ('useragent', models.CharField(db_column='UserAgent', max_length=260)),
                ('sortorder', models.IntegerField(db_column='SortOrder')),
                ('createdbyuserid', models.IntegerField(db_column='CreatedByUserID')),
                ('createdondate', models.DateTimeField(db_column='CreatedOnDate')),
                ('lastmodifiedbyuserid', models.IntegerField(db_column='LastModifiedByUserID')),
                ('lastmodifiedondate', models.DateTimeField(db_column='LastModifiedOnDate')),
            ],
            options={
                'db_table': 'Mobile_PreviewProfiles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MobileRedirectionrules',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('capability', models.CharField(db_column='Capability', max_length=50)),
                ('expression', models.CharField(db_column='Expression', max_length=50)),
            ],
            options={
                'db_table': 'Mobile_RedirectionRules',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MobileRedirections',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=50)),
                ('type', models.IntegerField(db_column='Type')),
                ('sortorder', models.IntegerField(db_column='SortOrder')),
                ('sourcetabid', models.IntegerField(db_column='SourceTabId')),
                ('includechildtabs', models.BooleanField(db_column='IncludeChildTabs')),
                ('targettype', models.IntegerField(db_column='TargetType')),
                ('targetvalue', models.CharField(db_column='TargetValue', max_length=260)),
                ('enabled', models.BooleanField(db_column='Enabled')),
                ('createdbyuserid', models.IntegerField(db_column='CreatedByUserID')),
                ('createdondate', models.DateTimeField(db_column='CreatedOnDate')),
                ('lastmodifiedbyuserid', models.IntegerField(db_column='LastModifiedByUserID')),
                ('lastmodifiedondate', models.DateTimeField(db_column='LastModifiedOnDate')),
            ],
            options={
                'db_table': 'Mobile_Redirections',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Modulecache',
            fields=[
                ('cachekey', models.CharField(db_column='CacheKey', max_length=36, primary_key=True, serialize=False)),
                ('itemid', models.IntegerField(db_column='ItemId')),
                ('data', models.TextField(db_column='Data')),
                ('expiration', models.DateTimeField(db_column='Expiration')),
            ],
            options={
                'db_table': 'ModuleCache',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Modulecontrols',
            fields=[
                ('modulecontrolid', models.AutoField(db_column='ModuleControlID', primary_key=True, serialize=False)),
                ('controlkey', models.CharField(blank=True, db_column='ControlKey', max_length=50, null=True)),
                ('controltitle', models.CharField(blank=True, db_column='ControlTitle', max_length=50, null=True)),
                ('controlsrc', models.CharField(blank=True, db_column='ControlSrc', max_length=256, null=True)),
                ('iconfile', models.CharField(blank=True, db_column='IconFile', max_length=100, null=True)),
                ('controltype', models.IntegerField(db_column='ControlType')),
                ('vieworder', models.IntegerField(blank=True, db_column='ViewOrder', null=True)),
                ('helpurl', models.CharField(blank=True, db_column='HelpUrl', max_length=200, null=True)),
                ('supportspartialrendering', models.BooleanField(db_column='SupportsPartialRendering')),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
                ('supportspopups', models.BooleanField(db_column='SupportsPopUps')),
            ],
            options={
                'db_table': 'ModuleControls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Moduledefinitions',
            fields=[
                ('moduledefid', models.AutoField(db_column='ModuleDefID', primary_key=True, serialize=False)),
                ('friendlyname', models.CharField(db_column='FriendlyName', max_length=128)),
                ('defaultcachetime', models.IntegerField(db_column='DefaultCacheTime')),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
                ('definitionname', models.CharField(db_column='DefinitionName', max_length=128, unique=True)),
            ],
            options={
                'db_table': 'ModuleDefinitions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Modulepermission',
            fields=[
                ('modulepermissionid', models.AutoField(db_column='ModulePermissionID', primary_key=True, serialize=False)),
                ('allowaccess', models.BooleanField(db_column='AllowAccess')),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
                ('portalid', models.IntegerField(db_column='PortalID')),
            ],
            options={
                'db_table': 'ModulePermission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Modules',
            fields=[
                ('moduleid', models.AutoField(db_column='ModuleID', primary_key=True, serialize=False)),
                ('alltabs', models.BooleanField(db_column='AllTabs')),
                ('isdeleted', models.BooleanField(db_column='IsDeleted')),
                ('inheritviewpermissions', models.NullBooleanField(db_column='InheritViewPermissions')),
                ('startdate', models.DateTimeField(blank=True, db_column='StartDate', null=True)),
                ('enddate', models.DateTimeField(blank=True, db_column='EndDate', null=True)),
                ('portalid', models.IntegerField(blank=True, db_column='PortalID', null=True)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
                ('lastcontentmodifiedondate', models.DateTimeField(blank=True, db_column='LastContentModifiedOnDate', null=True)),
                ('isshareable', models.BooleanField(db_column='IsShareable')),
                ('isshareableviewonly', models.BooleanField(db_column='IsShareableViewOnly')),
            ],
            options={
                'db_table': 'Modules',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Outputcache',
            fields=[
                ('cachekey', models.CharField(db_column='CacheKey', max_length=36, primary_key=True, serialize=False)),
                ('itemid', models.IntegerField(db_column='ItemId')),
                ('data', models.TextField(db_column='Data')),
                ('expiration', models.DateTimeField(db_column='Expiration')),
            ],
            options={
                'db_table': 'OutputCache',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Packagedependencies',
            fields=[
                ('packagedependencyid', models.AutoField(db_column='PackageDependencyID', primary_key=True, serialize=False)),
                ('packagename', models.CharField(db_column='PackageName', max_length=128)),
                ('version', models.CharField(db_column='Version', max_length=50)),
            ],
            options={
                'db_table': 'PackageDependencies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Packages',
            fields=[
                ('packageid', models.AutoField(db_column='PackageID', primary_key=True, serialize=False)),
                ('portalid', models.IntegerField(blank=True, db_column='PortalID', null=True)),
                ('name', models.CharField(db_column='Name', max_length=128)),
                ('friendlyname', models.CharField(db_column='FriendlyName', max_length=250)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=2000, null=True)),
                ('version', models.CharField(db_column='Version', max_length=50)),
                ('license', models.TextField(blank=True, db_column='License', null=True)),
                ('manifest', models.TextField(blank=True, db_column='Manifest', null=True)),
                ('owner', models.CharField(blank=True, db_column='Owner', max_length=100, null=True)),
                ('organization', models.CharField(blank=True, db_column='Organization', max_length=100, null=True)),
                ('url', models.CharField(blank=True, db_column='Url', max_length=250, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=100, null=True)),
                ('releasenotes', models.TextField(blank=True, db_column='ReleaseNotes', null=True)),
                ('issystempackage', models.BooleanField(db_column='IsSystemPackage')),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
                ('foldername', models.CharField(blank=True, db_column='FolderName', max_length=128, null=True)),
                ('iconfile', models.CharField(blank=True, db_column='IconFile', max_length=100, null=True)),
            ],
            options={
                'db_table': 'Packages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Packagetypes',
            fields=[
                ('packagetype', models.CharField(db_column='PackageType', max_length=100, primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='Description', max_length=500)),
                ('securityaccesslevel', models.IntegerField(db_column='SecurityAccessLevel')),
                ('editorcontrolsrc', models.CharField(blank=True, db_column='EditorControlSrc', max_length=250, null=True)),
                ('supportssidebysideinstallation', models.BooleanField(db_column='SupportsSideBySideInstallation')),
            ],
            options={
                'db_table': 'PackageTypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Passwordhistory',
            fields=[
                ('passwordhistoryid', models.AutoField(db_column='PasswordHistoryID', primary_key=True, serialize=False)),
                ('password', models.CharField(db_column='Password', max_length=128)),
                ('passwordsalt', models.CharField(db_column='PasswordSalt', max_length=128)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'PasswordHistory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('permissionid', models.AutoField(db_column='PermissionID', primary_key=True, serialize=False)),
                ('permissioncode', models.CharField(db_column='PermissionCode', max_length=50)),
                ('moduledefid', models.IntegerField(db_column='ModuleDefID')),
                ('permissionkey', models.CharField(db_column='PermissionKey', max_length=50)),
                ('permissionname', models.CharField(db_column='PermissionName', max_length=50)),
                ('vieworder', models.IntegerField(db_column='ViewOrder')),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'Permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Portalalias',
            fields=[
                ('portalaliasid', models.AutoField(db_column='PortalAliasID', primary_key=True, serialize=False)),
                ('httpalias', models.CharField(blank=True, db_column='HTTPAlias', max_length=200, null=True, unique=True)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
                ('browsertype', models.CharField(blank=True, db_column='BrowserType', max_length=10, null=True)),
                ('skin', models.CharField(blank=True, db_column='Skin', max_length=100, null=True)),
                ('culturecode', models.CharField(blank=True, db_column='CultureCode', max_length=10, null=True)),
                ('isprimary', models.BooleanField(db_column='IsPrimary')),
            ],
            options={
                'db_table': 'PortalAlias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Portaldesktopmodules',
            fields=[
                ('portaldesktopmoduleid', models.AutoField(db_column='PortalDesktopModuleID', primary_key=True, serialize=False)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'PortalDesktopModules',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Portalgroups',
            fields=[
                ('portalgroupid', models.AutoField(db_column='PortalGroupID', primary_key=True, serialize=False)),
                ('masterportalid', models.IntegerField(blank=True, db_column='MasterPortalID', null=True)),
                ('portalgroupname', models.CharField(blank=True, db_column='PortalGroupName', max_length=100, null=True)),
                ('portalgroupdescription', models.CharField(blank=True, db_column='PortalGroupDescription', max_length=2000, null=True)),
                ('authenticationdomain', models.CharField(blank=True, db_column='AuthenticationDomain', max_length=200, null=True)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'PortalGroups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Portallanguages',
            fields=[
                ('portallanguageid', models.AutoField(db_column='PortalLanguageID', primary_key=True, serialize=False)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
                ('ispublished', models.BooleanField(db_column='IsPublished')),
            ],
            options={
                'db_table': 'PortalLanguages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Portals',
            fields=[
                ('portalid', models.AutoField(db_column='PortalID', primary_key=True, serialize=False)),
                ('expirydate', models.DateTimeField(blank=True, db_column='ExpiryDate', null=True)),
                ('userregistration', models.IntegerField(db_column='UserRegistration')),
                ('banneradvertising', models.IntegerField(db_column='BannerAdvertising')),
                ('administratorid', models.IntegerField(blank=True, db_column='AdministratorId', null=True)),
                ('currency', models.CharField(blank=True, db_column='Currency', max_length=3, null=True)),
                ('hostfee', models.DecimalField(db_column='HostFee', decimal_places=4, max_digits=19)),
                ('hostspace', models.IntegerField(db_column='HostSpace')),
                ('administratorroleid', models.IntegerField(blank=True, db_column='AdministratorRoleId', null=True)),
                ('registeredroleid', models.IntegerField(blank=True, db_column='RegisteredRoleId', null=True)),
                ('guid', models.CharField(db_column='GUID', max_length=36)),
                ('paymentprocessor', models.CharField(blank=True, db_column='PaymentProcessor', max_length=50, null=True)),
                ('processoruserid', models.CharField(blank=True, db_column='ProcessorUserId', max_length=50, null=True)),
                ('processorpassword', models.CharField(blank=True, db_column='ProcessorPassword', max_length=50, null=True)),
                ('siteloghistory', models.IntegerField(blank=True, db_column='SiteLogHistory', null=True)),
                ('defaultlanguage', models.CharField(db_column='DefaultLanguage', max_length=10)),
                ('timezoneoffset', models.IntegerField(db_column='TimezoneOffset')),
                ('homedirectory', models.CharField(db_column='HomeDirectory', max_length=100)),
                ('pagequota', models.IntegerField(db_column='PageQuota')),
                ('userquota', models.IntegerField(db_column='UserQuota')),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
                ('portalgroupid', models.IntegerField(blank=True, db_column='PortalGroupID', null=True)),
            ],
            options={
                'db_table': 'Portals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Portalsettings',
            fields=[
                ('portalsettingid', models.AutoField(db_column='PortalSettingID', primary_key=True, serialize=False)),
                ('settingname', models.CharField(db_column='SettingName', max_length=50)),
                ('settingvalue', models.CharField(blank=True, db_column='SettingValue', max_length=2000, null=True)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
                ('culturecode', models.CharField(blank=True, db_column='CultureCode', max_length=10, null=True)),
            ],
            options={
                'db_table': 'PortalSettings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('profileid', models.AutoField(db_column='ProfileId', primary_key=True, serialize=False)),
                ('profiledata', models.TextField(db_column='ProfileData')),
                ('createddate', models.DateTimeField(db_column='CreatedDate')),
            ],
            options={
                'db_table': 'Profile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Profilepropertydefinition',
            fields=[
                ('propertydefinitionid', models.AutoField(db_column='PropertyDefinitionID', primary_key=True, serialize=False)),
                ('moduledefid', models.IntegerField(blank=True, db_column='ModuleDefID', null=True)),
                ('deleted', models.BooleanField(db_column='Deleted')),
                ('datatype', models.IntegerField(db_column='DataType')),
                ('defaultvalue', models.TextField(blank=True, db_column='DefaultValue', null=True)),
                ('propertycategory', models.CharField(db_column='PropertyCategory', max_length=50)),
                ('propertyname', models.CharField(db_column='PropertyName', max_length=50)),
                ('length', models.IntegerField(db_column='Length')),
                ('required', models.BooleanField(db_column='Required')),
                ('validationexpression', models.CharField(blank=True, db_column='ValidationExpression', max_length=2000, null=True)),
                ('vieworder', models.IntegerField(db_column='ViewOrder')),
                ('visible', models.BooleanField(db_column='Visible')),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
                ('defaultvisibility', models.IntegerField(blank=True, db_column='DefaultVisibility', null=True)),
                ('readonly', models.BooleanField(db_column='ReadOnly')),
            ],
            options={
                'db_table': 'ProfilePropertyDefinition',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PublisherPosts',
            fields=[
                ('postid', models.AutoField(db_column='PostId', primary_key=True, serialize=False)),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('groupid', models.IntegerField(blank=True, db_column='GroupId', null=True)),
                ('contentitemid', models.IntegerField(db_column='ContentItemId')),
                ('published', models.BooleanField(db_column='Published')),
                ('allowedcomments', models.BooleanField(db_column='AllowedComments')),
                ('featured', models.BooleanField(db_column='Featured')),
                ('authoruserid', models.IntegerField(db_column='AuthorUserId')),
                ('metadatatitle', models.TextField(db_column='MetadataTitle')),
                ('iscustommetadatatitle', models.BooleanField(db_column='IsCustomMetadataTitle')),
                ('metadatadescription', models.TextField(db_column='MetadataDescription')),
                ('iscustommetadatadescription', models.BooleanField(db_column='IsCustomMetadataDescription')),
                ('publishedondate', models.DateTimeField(blank=True, db_column='PublishedOnDate', null=True)),
                ('createdondate', models.DateTimeField(db_column='CreatedOnDate')),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'Publisher_Posts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Relationships',
            fields=[
                ('relationshipid', models.AutoField(db_column='RelationshipID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=50)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=500, null=True)),
                ('defaultresponse', models.IntegerField(db_column='DefaultResponse')),
                ('createdbyuserid', models.IntegerField(db_column='CreatedByUserID')),
                ('createdondate', models.DateTimeField(db_column='CreatedOnDate')),
                ('lastmodifiedbyuserid', models.IntegerField(db_column='LastModifiedByUserID')),
                ('lastmodifiedondate', models.DateTimeField(db_column='LastModifiedOnDate')),
            ],
            options={
                'db_table': 'Relationships',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Relationshiptypes',
            fields=[
                ('relationshiptypeid', models.AutoField(db_column='RelationshipTypeID', primary_key=True, serialize=False)),
                ('direction', models.IntegerField(db_column='Direction')),
                ('name', models.CharField(db_column='Name', max_length=50)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=500, null=True)),
                ('createdbyuserid', models.IntegerField(db_column='CreatedByUserID')),
                ('createdondate', models.DateTimeField(db_column='CreatedOnDate')),
                ('lastmodifiedbyuserid', models.IntegerField(db_column='LastModifiedByUserID')),
                ('lastmodifiedondate', models.DateTimeField(db_column='LastModifiedOnDate')),
            ],
            options={
                'db_table': 'RelationshipTypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Revisions',
            fields=[
                ('revisionid', models.AutoField(db_column='RevisionId', primary_key=True, serialize=False)),
                ('sequence', models.IntegerField(db_column='Sequence')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('contentitemid', models.IntegerField(db_column='ContentItemId')),
                ('revisiontype', models.IntegerField(db_column='RevisionType')),
                ('state', models.IntegerField(db_column='State')),
                ('changeset', models.TextField(blank=True, db_column='Changeset', null=True)),
                ('objectkey', models.CharField(blank=True, db_column='ObjectKey', max_length=64, null=True)),
                ('createduserid', models.IntegerField(db_column='CreatedUserId')),
                ('createddate', models.DateTimeField(db_column='CreatedDate')),
                ('lastmodifieduserid', models.IntegerField(db_column='LastModifiedUserId')),
                ('lastmodifieddate', models.DateTimeField(db_column='LastModifiedDate')),
                ('contentitemtype', models.IntegerField(db_column='ContentItemType')),
                ('childitemid', models.IntegerField(db_column='ChildItemId')),
            ],
            options={
                'db_table': 'Revisions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RevisionsLocks',
            fields=[
                ('lockid', models.AutoField(db_column='LockId', primary_key=True, serialize=False)),
                ('contentitemid', models.IntegerField(db_column='ContentItemId')),
                ('userid', models.IntegerField(db_column='UserId')),
                ('lockeddate', models.DateTimeField(db_column='LockedDate')),
                ('contentitemtype', models.IntegerField(db_column='ContentItemType')),
                ('childitemid', models.IntegerField(db_column='ChildItemId')),
            ],
            options={
                'db_table': 'Revisions_Locks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RevisionsStatehistory',
            fields=[
                ('revisionstateid', models.AutoField(db_column='RevisionStateId', primary_key=True, serialize=False)),
                ('revisionid', models.IntegerField(db_column='RevisionId')),
                ('oldstate', models.IntegerField(blank=True, db_column='OldState', null=True)),
                ('newstate', models.IntegerField(db_column='NewState')),
                ('userid', models.IntegerField(db_column='UserId')),
                ('transitiondate', models.DateTimeField(db_column='TransitionDate')),
            ],
            options={
                'db_table': 'Revisions_StateHistory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rolegroups',
            fields=[
                ('rolegroupid', models.AutoField(db_column='RoleGroupID', primary_key=True, serialize=False)),
                ('rolegroupname', models.CharField(db_column='RoleGroupName', max_length=50)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=1000, null=True)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'RoleGroups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('roleid', models.AutoField(db_column='RoleID', primary_key=True, serialize=False)),
                ('rolename', models.CharField(db_column='RoleName', max_length=50)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=1000, null=True)),
                ('servicefee', models.DecimalField(blank=True, db_column='ServiceFee', decimal_places=4, max_digits=19, null=True)),
                ('billingfrequency', models.CharField(blank=True, db_column='BillingFrequency', max_length=1, null=True)),
                ('trialperiod', models.IntegerField(blank=True, db_column='TrialPeriod', null=True)),
                ('trialfrequency', models.CharField(blank=True, db_column='TrialFrequency', max_length=1, null=True)),
                ('billingperiod', models.IntegerField(blank=True, db_column='BillingPeriod', null=True)),
                ('trialfee', models.DecimalField(blank=True, db_column='TrialFee', decimal_places=4, max_digits=19, null=True)),
                ('ispublic', models.BooleanField(db_column='IsPublic')),
                ('autoassignment', models.BooleanField(db_column='AutoAssignment')),
                ('rsvpcode', models.CharField(blank=True, db_column='RSVPCode', max_length=50, null=True)),
                ('iconfile', models.CharField(blank=True, db_column='IconFile', max_length=100, null=True)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
                ('status', models.IntegerField(db_column='Status')),
                ('securitymode', models.IntegerField(db_column='SecurityMode')),
                ('issystemrole', models.BooleanField(db_column='IsSystemRole')),
            ],
            options={
                'db_table': 'Roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rolesettings',
            fields=[
                ('rolesettingid', models.AutoField(db_column='RoleSettingID', primary_key=True, serialize=False)),
                ('roleid', models.IntegerField(db_column='RoleID')),
                ('settingname', models.CharField(db_column='SettingName', max_length=50)),
                ('settingvalue', models.CharField(db_column='SettingValue', max_length=2000)),
                ('createdbyuserid', models.IntegerField(db_column='CreatedByUserID')),
                ('createdondate', models.DateTimeField(db_column='CreatedOnDate')),
                ('lastmodifiedbyuserid', models.IntegerField(db_column='LastModifiedByUserID')),
                ('lastmodifiedondate', models.DateTimeField(db_column='LastModifiedOnDate')),
            ],
            options={
                'db_table': 'RoleSettings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('scheduleid', models.AutoField(db_column='ScheduleID', primary_key=True, serialize=False)),
                ('typefullname', models.CharField(db_column='TypeFullName', max_length=200)),
                ('timelapse', models.IntegerField(db_column='TimeLapse')),
                ('timelapsemeasurement', models.CharField(db_column='TimeLapseMeasurement', max_length=2)),
                ('retrytimelapse', models.IntegerField(db_column='RetryTimeLapse')),
                ('retrytimelapsemeasurement', models.CharField(db_column='RetryTimeLapseMeasurement', max_length=2)),
                ('retainhistorynum', models.IntegerField(db_column='RetainHistoryNum')),
                ('attachtoevent', models.CharField(db_column='AttachToEvent', max_length=50)),
                ('catchupenabled', models.BooleanField(db_column='CatchUpEnabled')),
                ('enabled', models.BooleanField(db_column='Enabled')),
                ('objectdependencies', models.CharField(db_column='ObjectDependencies', max_length=300)),
                ('servers', models.CharField(blank=True, db_column='Servers', max_length=2000, null=True)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
                ('friendlyname', models.CharField(blank=True, db_column='FriendlyName', max_length=200, null=True)),
                ('schedulestartdate', models.DateTimeField(blank=True, db_column='ScheduleStartDate', null=True)),
            ],
            options={
                'db_table': 'Schedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Schedulehistory',
            fields=[
                ('schedulehistoryid', models.AutoField(db_column='ScheduleHistoryID', primary_key=True, serialize=False)),
                ('startdate', models.DateTimeField(db_column='StartDate')),
                ('enddate', models.DateTimeField(blank=True, db_column='EndDate', null=True)),
                ('succeeded', models.NullBooleanField(db_column='Succeeded')),
                ('lognotes', models.TextField(blank=True, db_column='LogNotes', null=True)),
                ('nextstart', models.DateTimeField(blank=True, db_column='NextStart', null=True)),
                ('server', models.CharField(blank=True, db_column='Server', max_length=150, null=True)),
            ],
            options={
                'db_table': 'ScheduleHistory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ScUrl',
            fields=[
                ('urlid', models.AutoField(db_column='UrlId', primary_key=True, serialize=False)),
                ('url', models.CharField(blank=True, db_column='Url', max_length=256, null=True)),
                ('urlactive', models.NullBooleanField(db_column='UrlActive')),
                ('urldnnrole', models.CharField(blank=True, db_column='UrlDNNRole', max_length=50, null=True)),
                ('urldnnuser', models.CharField(blank=True, db_column='UrlDNNUser', max_length=50, null=True)),
                ('urlwinauthentication', models.NullBooleanField(db_column='UrlWinAuthentication')),
                ('urlwindomain', models.CharField(blank=True, db_column='UrlWinDomain', max_length=50, null=True)),
                ('urlwinuser', models.CharField(blank=True, db_column='UrlWinUser', max_length=50, null=True)),
                ('urlwinpassword', models.CharField(blank=True, db_column='UrlWinPassword', max_length=50, null=True)),
                ('urlsitemap', models.CharField(blank=True, db_column='UrlSitemap', max_length=256, null=True)),
                ('portalid', models.IntegerField(db_column='PortalId')),
            ],
            options={
                'db_table': 'sc_Url',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Searchcommonwords',
            fields=[
                ('commonwordid', models.AutoField(db_column='CommonWordID', primary_key=True, serialize=False)),
                ('commonword', models.CharField(db_column='CommonWord', max_length=255)),
                ('locale', models.CharField(blank=True, db_column='Locale', max_length=10, null=True)),
            ],
            options={
                'db_table': 'SearchCommonWords',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Searchdeleteditems',
            fields=[
                ('searchdeleteditemsid', models.AutoField(db_column='SearchDeletedItemsID', primary_key=True, serialize=False)),
                ('datecreated', models.DateTimeField(db_column='DateCreated')),
                ('document', models.TextField(blank=True, db_column='Document', null=True)),
            ],
            options={
                'db_table': 'SearchDeletedItems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Searchindexer',
            fields=[
                ('searchindexerid', models.AutoField(db_column='SearchIndexerID', primary_key=True, serialize=False)),
                ('searchindexerassemblyqualifiedname', models.CharField(db_column='SearchIndexerAssemblyQualifiedName', max_length=200)),
            ],
            options={
                'db_table': 'SearchIndexer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Searchpreviousfilecrawlerrunitems',
            fields=[
                ('fileid', models.IntegerField(db_column='FileId', primary_key=True, serialize=False)),
                ('searchtypeid', models.IntegerField(db_column='SearchTypeId')),
                ('scheduleid', models.IntegerField(db_column='ScheduleId')),
                ('filename', models.CharField(db_column='FileName', max_length=246)),
                ('url', models.CharField(blank=True, db_column='Url', max_length=256, null=True)),
                ('fileuniqueid', models.CharField(blank=True, db_column='FileUniqueId', max_length=36, null=True)),
                ('sha1hash', models.CharField(blank=True, db_column='Sha1Hash', max_length=40, null=True)),
                ('bodyindexed', models.BooleanField(db_column='BodyIndexed')),
            ],
            options={
                'db_table': 'SearchPreviousFileCrawlerRunItems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Searchstopwords',
            fields=[
                ('stopwordsid', models.AutoField(db_column='StopWordsID', primary_key=True, serialize=False)),
                ('stopwords', models.TextField(db_column='StopWords')),
                ('createdbyuserid', models.IntegerField(db_column='CreatedByUserID')),
                ('createdondate', models.DateTimeField(db_column='CreatedOnDate')),
                ('lastmodifiedbyuserid', models.IntegerField(db_column='LastModifiedByUserID')),
                ('lastmodifiedondate', models.DateTimeField(db_column='LastModifiedOnDate')),
                ('portalid', models.IntegerField(db_column='PortalID')),
                ('culturecode', models.CharField(db_column='CultureCode', max_length=50)),
            ],
            options={
                'db_table': 'SearchStopWords',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Searchtypes',
            fields=[
                ('searchtypeid', models.AutoField(db_column='SearchTypeId', primary_key=True, serialize=False)),
                ('searchtypename', models.CharField(db_column='SearchTypeName', max_length=100)),
                ('searchresultclass', models.CharField(db_column='SearchResultClass', max_length=256)),
                ('isprivate', models.NullBooleanField(db_column='IsPrivate')),
            ],
            options={
                'db_table': 'SearchTypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sitelog',
            fields=[
                ('sitelogid', models.AutoField(db_column='SiteLogId', primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(db_column='DateTime')),
                ('userid', models.IntegerField(blank=True, db_column='UserId', null=True)),
                ('referrer', models.CharField(blank=True, db_column='Referrer', max_length=255, null=True)),
                ('url', models.CharField(blank=True, db_column='Url', max_length=255, null=True)),
                ('useragent', models.CharField(blank=True, db_column='UserAgent', max_length=255, null=True)),
                ('userhostaddress', models.CharField(blank=True, db_column='UserHostAddress', max_length=255, null=True)),
                ('userhostname', models.CharField(blank=True, db_column='UserHostName', max_length=255, null=True)),
                ('tabid', models.IntegerField(blank=True, db_column='TabId', null=True)),
                ('affiliateid', models.IntegerField(blank=True, db_column='AffiliateId', null=True)),
            ],
            options={
                'db_table': 'SiteLog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Skincontrols',
            fields=[
                ('skincontrolid', models.AutoField(db_column='SkinControlID', primary_key=True, serialize=False)),
                ('controlkey', models.CharField(blank=True, db_column='ControlKey', max_length=50, null=True)),
                ('controlsrc', models.CharField(blank=True, db_column='ControlSrc', max_length=256, null=True)),
                ('iconfile', models.CharField(blank=True, db_column='IconFile', max_length=100, null=True)),
                ('helpurl', models.CharField(blank=True, db_column='HelpUrl', max_length=200, null=True)),
                ('supportspartialrendering', models.BooleanField(db_column='SupportsPartialRendering')),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'SkinControls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Skinpackages',
            fields=[
                ('skinpackageid', models.AutoField(db_column='SkinPackageID', primary_key=True, serialize=False)),
                ('portalid', models.IntegerField(blank=True, db_column='PortalID', null=True)),
                ('skinname', models.CharField(db_column='SkinName', max_length=50)),
                ('skintype', models.CharField(db_column='SkinType', max_length=20)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'SkinPackages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Skins',
            fields=[
                ('skinid', models.AutoField(db_column='SkinID', primary_key=True, serialize=False)),
                ('skinsrc', models.CharField(db_column='SkinSrc', max_length=250)),
            ],
            options={
                'db_table': 'Skins',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpconnectorConnections',
            fields=[
                ('connectionid', models.AutoField(db_column='ConnectionId', primary_key=True, serialize=False)),
                ('connectionname', models.CharField(db_column='ConnectionName', max_length=255)),
                ('sharepointsiteurl', models.CharField(db_column='SharePointSiteUrl', max_length=255)),
                ('sharepointversion', models.SmallIntegerField(db_column='SharePointVersion')),
                ('isanonymous', models.BooleanField(db_column='IsAnonymous')),
                ('sharepointusername', models.CharField(blank=True, db_column='SharePointUserName', max_length=255, null=True)),
                ('sharepointpassword', models.TextField(blank=True, db_column='SharePointPassword', null=True)),
            ],
            options={
                'db_table': 'SPConnector_Connections',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpconnectorLists',
            fields=[
                ('listid', models.AutoField(db_column='ListId', primary_key=True, serialize=False)),
                ('mappingid', models.CharField(blank=True, db_column='MappingId', max_length=36, null=True)),
                ('synchtype', models.SmallIntegerField(db_column='SynchType')),
                ('listname', models.CharField(db_column='ListName', max_length=255)),
                ('viewname', models.CharField(blank=True, db_column='ViewName', max_length=255, null=True)),
                ('listschema', models.TextField(db_column='ListSchema')),
                ('listtablename', models.CharField(db_column='ListTableName', max_length=255)),
                ('isreadonly', models.BooleanField(db_column='IsReadOnly')),
                ('lastsynchronized', models.DateTimeField(blank=True, db_column='LastSynchronized', null=True)),
                ('itemcount', models.IntegerField(blank=True, db_column='ItemCount', null=True)),
            ],
            options={
                'db_table': 'SPConnector_Lists',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpconnectorListsubmissions',
            fields=[
                ('submissionid', models.AutoField(db_column='SubmissionId', primary_key=True, serialize=False)),
                ('listitemdata', models.TextField(db_column='ListItemData')),
                ('submitstatus', models.SmallIntegerField(db_column='SubmitStatus')),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(db_column='CreatedOnDate')),
                ('sharepointitemid', models.IntegerField(blank=True, db_column='SharePointItemId', null=True)),
                ('sharepointlastmodified', models.DateTimeField(blank=True, db_column='SharePointLastModified', null=True)),
            ],
            options={
                'db_table': 'SPConnector_ListSubmissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpconnectorLookups',
            fields=[
                ('lookupid', models.AutoField(db_column='LookupId', primary_key=True, serialize=False)),
                ('columnname', models.CharField(db_column='ColumnName', max_length=255)),
                ('sharepointlastmodified', models.DateTimeField(blank=True, db_column='SharePointLastModified', null=True)),
                ('sharepointlastmodifiedby', models.CharField(blank=True, db_column='SharePointLastModifiedBy', max_length=255, null=True)),
                ('itemid', models.IntegerField(blank=True, db_column='ItemId', null=True)),
                ('itemvalue', models.CharField(blank=True, db_column='ItemValue', max_length=255, null=True)),
            ],
            options={
                'db_table': 'SPConnector_Lookups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpconnectorModulefields',
            fields=[
                ('modulefieldid', models.AutoField(db_column='ModuleFieldId', primary_key=True, serialize=False)),
                ('fieldguid', models.CharField(db_column='FieldGuid', max_length=36)),
                ('displayname', models.CharField(blank=True, db_column='DisplayName', max_length=255, null=True)),
                ('isactive', models.NullBooleanField(db_column='IsActive')),
                ('requirederrormessage', models.CharField(blank=True, db_column='RequiredErrorMessage', max_length=255, null=True)),
                ('regex', models.CharField(blank=True, db_column='Regex', max_length=255, null=True)),
                ('regexerrormessage', models.CharField(blank=True, db_column='RegexErrorMessage', max_length=255, null=True)),
                ('sequenceid', models.IntegerField(blank=True, db_column='SequenceId', null=True)),
            ],
            options={
                'db_table': 'SPConnector_ModuleFields',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sqlqueries',
            fields=[
                ('queryid', models.AutoField(db_column='QueryId', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=200)),
                ('query', models.TextField(db_column='Query')),
                ('connectionstringname', models.CharField(db_column='ConnectionStringName', max_length=50)),
                ('createdbyuserid', models.IntegerField(db_column='CreatedByUserId')),
                ('createdondate', models.DateTimeField(db_column='CreatedOnDate')),
                ('lastmodifiedbyuserid', models.IntegerField(db_column='LastModifiedByUserId')),
                ('lastmodifiedondate', models.DateTimeField(db_column='LastModifiedOnDate')),
            ],
            options={
                'db_table': 'SQLQueries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Synonymsgroups',
            fields=[
                ('synonymsgroupid', models.AutoField(db_column='SynonymsGroupID', primary_key=True, serialize=False)),
                ('synonymstags', models.TextField(db_column='SynonymsTags')),
                ('portalid', models.IntegerField(db_column='PortalID')),
                ('culturecode', models.CharField(db_column='CultureCode', max_length=50)),
                ('createdbyuserid', models.IntegerField(db_column='CreatedByUserID')),
                ('createdondate', models.DateTimeField(db_column='CreatedOnDate')),
                ('lastmodifiedbyuserid', models.IntegerField(db_column='LastModifiedByUserID')),
                ('lastmodifiedondate', models.DateTimeField(db_column='LastModifiedOnDate')),
            ],
            options={
                'db_table': 'SynonymsGroups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sysdiagrams',
            fields=[
                ('name', models.CharField(max_length=128)),
                ('principal_id', models.IntegerField()),
                ('diagram_id', models.AutoField(primary_key=True, serialize=False)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('definition', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sysdiagrams',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Systemmessages',
            fields=[
                ('messageid', models.AutoField(db_column='MessageID', primary_key=True, serialize=False)),
                ('messagename', models.CharField(db_column='MessageName', max_length=50)),
                ('messagevalue', models.TextField(db_column='MessageValue')),
            ],
            options={
                'db_table': 'SystemMessages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tabaliasskins',
            fields=[
                ('tabaliasskinid', models.AutoField(db_column='TabAliasSkinId', primary_key=True, serialize=False)),
                ('tabid', models.IntegerField(db_column='TabId')),
                ('portalaliasid', models.IntegerField(db_column='PortalAliasId')),
                ('skinsrc', models.CharField(db_column='SkinSrc', max_length=200)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserId', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserId', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'TabAliasSkins',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tabmodules',
            fields=[
                ('tabmoduleid', models.AutoField(db_column='TabModuleID', primary_key=True, serialize=False)),
                ('panename', models.CharField(db_column='PaneName', max_length=50)),
                ('moduleorder', models.IntegerField(db_column='ModuleOrder')),
                ('cachetime', models.IntegerField(db_column='CacheTime')),
                ('alignment', models.CharField(blank=True, db_column='Alignment', max_length=10, null=True)),
                ('color', models.CharField(blank=True, db_column='Color', max_length=20, null=True)),
                ('border', models.CharField(blank=True, db_column='Border', max_length=1, null=True)),
                ('iconfile', models.CharField(blank=True, db_column='IconFile', max_length=100, null=True)),
                ('visibility', models.IntegerField(db_column='Visibility')),
                ('containersrc', models.CharField(blank=True, db_column='ContainerSrc', max_length=200, null=True)),
                ('displaytitle', models.BooleanField(db_column='DisplayTitle')),
                ('displayprint', models.BooleanField(db_column='DisplayPrint')),
                ('displaysyndicate', models.BooleanField(db_column='DisplaySyndicate')),
                ('iswebslice', models.BooleanField(db_column='IsWebSlice')),
                ('webslicetitle', models.CharField(blank=True, db_column='WebSliceTitle', max_length=256, null=True)),
                ('websliceexpirydate', models.DateTimeField(blank=True, db_column='WebSliceExpiryDate', null=True)),
                ('webslicettl', models.IntegerField(blank=True, db_column='WebSliceTTL', null=True)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
                ('isdeleted', models.BooleanField(db_column='IsDeleted')),
                ('cachemethod', models.CharField(blank=True, db_column='CacheMethod', max_length=50, null=True)),
                ('moduletitle', models.CharField(blank=True, db_column='ModuleTitle', max_length=256, null=True)),
                ('header', models.TextField(blank=True, db_column='Header', null=True)),
                ('footer', models.TextField(blank=True, db_column='Footer', null=True)),
                ('culturecode', models.CharField(blank=True, db_column='CultureCode', max_length=10, null=True)),
                ('uniqueid', models.CharField(db_column='UniqueId', max_length=36, unique=True)),
                ('versionguid', models.CharField(db_column='VersionGuid', max_length=36)),
                ('defaultlanguageguid', models.CharField(blank=True, db_column='DefaultLanguageGuid', max_length=36, null=True)),
                ('localizedversionguid', models.CharField(db_column='LocalizedVersionGuid', max_length=36)),
            ],
            options={
                'db_table': 'TabModules',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tabpermission',
            fields=[
                ('tabpermissionid', models.AutoField(db_column='TabPermissionID', primary_key=True, serialize=False)),
                ('allowaccess', models.BooleanField(db_column='AllowAccess')),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'TabPermission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tabs',
            fields=[
                ('tabid', models.AutoField(db_column='TabID', primary_key=True, serialize=False)),
                ('taborder', models.IntegerField(db_column='TabOrder')),
                ('tabname', models.CharField(db_column='TabName', max_length=200)),
                ('isvisible', models.BooleanField(db_column='IsVisible')),
                ('iconfile', models.CharField(blank=True, db_column='IconFile', max_length=255, null=True)),
                ('disablelink', models.BooleanField(db_column='DisableLink')),
                ('title', models.CharField(blank=True, db_column='Title', max_length=200, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=500, null=True)),
                ('keywords', models.CharField(blank=True, db_column='KeyWords', max_length=500, null=True)),
                ('isdeleted', models.BooleanField(db_column='IsDeleted')),
                ('url', models.CharField(blank=True, db_column='Url', max_length=255, null=True)),
                ('skinsrc', models.CharField(blank=True, db_column='SkinSrc', max_length=200, null=True)),
                ('containersrc', models.CharField(blank=True, db_column='ContainerSrc', max_length=200, null=True)),
                ('startdate', models.DateTimeField(blank=True, db_column='StartDate', null=True)),
                ('enddate', models.DateTimeField(blank=True, db_column='EndDate', null=True)),
                ('refreshinterval', models.IntegerField(blank=True, db_column='RefreshInterval', null=True)),
                ('pageheadtext', models.TextField(blank=True, db_column='PageHeadText', null=True)),
                ('issecure', models.BooleanField(db_column='IsSecure')),
                ('permanentredirect', models.BooleanField(db_column='PermanentRedirect')),
                ('sitemappriority', models.FloatField(db_column='SiteMapPriority')),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
                ('iconfilelarge', models.CharField(blank=True, db_column='IconFileLarge', max_length=255, null=True)),
                ('culturecode', models.CharField(blank=True, db_column='CultureCode', max_length=10, null=True)),
                ('uniqueid', models.CharField(db_column='UniqueId', max_length=36, unique=True)),
                ('versionguid', models.CharField(db_column='VersionGuid', max_length=36)),
                ('defaultlanguageguid', models.CharField(blank=True, db_column='DefaultLanguageGuid', max_length=36, null=True)),
                ('localizedversionguid', models.CharField(db_column='LocalizedVersionGuid', max_length=36)),
                ('level', models.IntegerField(db_column='Level')),
                ('tabpath', models.CharField(db_column='TabPath', max_length=255)),
                ('hasbeenpublished', models.BooleanField(db_column='HasBeenPublished')),
                ('issystem', models.BooleanField(db_column='IsSystem')),
            ],
            options={
                'db_table': 'Tabs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tabversiondetails',
            fields=[
                ('tabversiondetailid', models.AutoField(db_column='TabVersionDetailId', primary_key=True, serialize=False)),
                ('moduleid', models.IntegerField(db_column='ModuleId')),
                ('moduleversion', models.IntegerField(db_column='ModuleVersion')),
                ('panename', models.CharField(db_column='PaneName', max_length=50)),
                ('moduleorder', models.IntegerField(db_column='ModuleOrder')),
                ('action', models.IntegerField(db_column='Action')),
                ('createdbyuserid', models.IntegerField(db_column='CreatedByUserID')),
                ('createdondate', models.DateTimeField(db_column='CreatedOnDate')),
                ('lastmodifiedbyuserid', models.IntegerField(db_column='LastModifiedByUserID')),
                ('lastmodifiedondate', models.DateTimeField(db_column='LastModifiedOnDate')),
            ],
            options={
                'db_table': 'TabVersionDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tabversions',
            fields=[
                ('tabversionid', models.AutoField(db_column='TabVersionId', primary_key=True, serialize=False)),
                ('version', models.IntegerField(db_column='Version')),
                ('timestamp', models.DateTimeField(db_column='TimeStamp')),
                ('ispublished', models.BooleanField(db_column='IsPublished')),
                ('createdbyuserid', models.IntegerField(db_column='CreatedByUserID')),
                ('createdondate', models.DateTimeField(db_column='CreatedOnDate')),
                ('lastmodifiedbyuserid', models.IntegerField(db_column='LastModifiedByUserID')),
                ('lastmodifiedondate', models.DateTimeField(db_column='LastModifiedOnDate')),
            ],
            options={
                'db_table': 'TabVersions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaxonomyScopetypes',
            fields=[
                ('scopetypeid', models.AutoField(db_column='ScopeTypeID', primary_key=True, serialize=False)),
                ('scopetype', models.CharField(blank=True, db_column='ScopeType', max_length=250, null=True)),
            ],
            options={
                'db_table': 'Taxonomy_ScopeTypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaxonomyTerms',
            fields=[
                ('termid', models.AutoField(db_column='TermID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=250)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=2500, null=True)),
                ('weight', models.IntegerField(db_column='Weight')),
                ('termleft', models.IntegerField(db_column='TermLeft')),
                ('termright', models.IntegerField(db_column='TermRight')),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'Taxonomy_Terms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaxonomyVocabularies',
            fields=[
                ('vocabularyid', models.AutoField(db_column='VocabularyID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=250)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=2500, null=True)),
                ('weight', models.IntegerField(db_column='Weight')),
                ('scopeid', models.IntegerField(blank=True, db_column='ScopeID', null=True)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
                ('issystem', models.BooleanField(db_column='IsSystem')),
            ],
            options={
                'db_table': 'Taxonomy_Vocabularies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaxonomyVocabularytypes',
            fields=[
                ('vocabularytypeid', models.AutoField(db_column='VocabularyTypeID', primary_key=True, serialize=False)),
                ('vocabularytype', models.CharField(db_column='VocabularyType', max_length=50)),
            ],
            options={
                'db_table': 'Taxonomy_VocabularyTypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Urllog',
            fields=[
                ('urllogid', models.AutoField(db_column='UrlLogID', primary_key=True, serialize=False)),
                ('clickdate', models.DateTimeField(db_column='ClickDate')),
                ('userid', models.IntegerField(blank=True, db_column='UserID', null=True)),
            ],
            options={
                'db_table': 'UrlLog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Urls',
            fields=[
                ('urlid', models.AutoField(db_column='UrlID', primary_key=True, serialize=False)),
                ('url', models.CharField(db_column='Url', max_length=255)),
            ],
            options={
                'db_table': 'Urls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Urltracking',
            fields=[
                ('urltrackingid', models.AutoField(db_column='UrlTrackingID', primary_key=True, serialize=False)),
                ('url', models.CharField(db_column='Url', max_length=255)),
                ('urltype', models.CharField(db_column='UrlType', max_length=1)),
                ('clicks', models.IntegerField(db_column='Clicks')),
                ('lastclick', models.DateTimeField(blank=True, db_column='LastClick', null=True)),
                ('createddate', models.DateTimeField(db_column='CreatedDate')),
                ('logactivity', models.BooleanField(db_column='LogActivity')),
                ('trackclicks', models.BooleanField(db_column='TrackClicks')),
                ('moduleid', models.IntegerField(blank=True, db_column='ModuleId', null=True)),
                ('newwindow', models.BooleanField(db_column='NewWindow')),
            ],
            options={
                'db_table': 'UrlTracking',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userauthentication',
            fields=[
                ('userauthenticationid', models.AutoField(db_column='UserAuthenticationID', primary_key=True, serialize=False)),
                ('authenticationtype', models.CharField(db_column='AuthenticationType', max_length=100)),
                ('authenticationtoken', models.CharField(db_column='AuthenticationToken', max_length=1000)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'UserAuthentication',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userdefinedfields',
            fields=[
                ('userdefinedfieldid', models.AutoField(db_column='UserDefinedFieldId', primary_key=True, serialize=False)),
                ('fieldtitle', models.CharField(blank=True, db_column='FieldTitle', max_length=2000, null=True)),
                ('visible', models.BooleanField(db_column='Visible')),
                ('fieldorder', models.IntegerField(db_column='FieldOrder')),
                ('fieldtype', models.CharField(db_column='FieldType', max_length=20)),
                ('required', models.BooleanField(db_column='Required')),
                ('default', models.CharField(blank=True, db_column='Default', max_length=2000, null=True)),
                ('outputsettings', models.CharField(blank=True, db_column='OutputSettings', max_length=2000, null=True)),
                ('inputsettings', models.TextField(blank=True, db_column='InputSettings', null=True)),
                ('validationrule', models.CharField(blank=True, db_column='ValidationRule', max_length=512, null=True)),
                ('validationmessage', models.CharField(blank=True, db_column='ValidationMessage', max_length=512, null=True)),
                ('normalizeflag', models.BooleanField(db_column='NormalizeFlag')),
                ('helptext', models.TextField(blank=True, db_column='HelpText', null=True)),
                ('searchable', models.BooleanField(db_column='Searchable')),
                ('showonedit', models.BooleanField(db_column='ShowOnEdit')),
                ('privatefield', models.BooleanField(db_column='PrivateField')),
                ('editstyle', models.CharField(blank=True, db_column='EditStyle', max_length=512, null=True)),
                ('multiplevalues', models.BooleanField(db_column='MultipleValues')),
            ],
            options={
                'db_table': 'UserDefinedFields',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userdefinedrows',
            fields=[
                ('userdefinedrowid', models.AutoField(db_column='UserDefinedRowId', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'UserDefinedRows',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userportals',
            fields=[
                ('userportalid', models.AutoField(db_column='UserPortalId', primary_key=True, serialize=False)),
                ('createddate', models.DateTimeField(db_column='CreatedDate')),
                ('authorised', models.BooleanField(db_column='Authorised')),
                ('isdeleted', models.BooleanField(db_column='IsDeleted')),
                ('refreshroles', models.BooleanField(db_column='RefreshRoles')),
                ('vanityurl', models.CharField(blank=True, db_column='VanityUrl', max_length=100, null=True)),
            ],
            options={
                'db_table': 'UserPortals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userprofile',
            fields=[
                ('profileid', models.AutoField(db_column='ProfileID', primary_key=True, serialize=False)),
                ('propertyvalue', models.CharField(blank=True, db_column='PropertyValue', max_length=3750, null=True)),
                ('propertytext', models.TextField(blank=True, db_column='PropertyText', null=True)),
                ('visibility', models.IntegerField(db_column='Visibility')),
                ('lastupdateddate', models.DateTimeField(db_column='LastUpdatedDate')),
                ('extendedvisibility', models.CharField(blank=True, db_column='ExtendedVisibility', max_length=400, null=True)),
            ],
            options={
                'db_table': 'UserProfile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userrelationshippreferences',
            fields=[
                ('preferenceid', models.AutoField(db_column='PreferenceID', primary_key=True, serialize=False)),
                ('defaultresponse', models.IntegerField(db_column='DefaultResponse')),
                ('createdbyuserid', models.IntegerField(db_column='CreatedByUserID')),
                ('createdondate', models.DateTimeField(db_column='CreatedOnDate')),
                ('lastmodifiedbyuserid', models.IntegerField(db_column='LastModifiedByUserID')),
                ('lastmodifiedondate', models.DateTimeField(db_column='LastModifiedOnDate')),
            ],
            options={
                'db_table': 'UserRelationshipPreferences',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userrelationships',
            fields=[
                ('userrelationshipid', models.AutoField(db_column='UserRelationshipID', primary_key=True, serialize=False)),
                ('status', models.IntegerField(db_column='Status')),
                ('createdbyuserid', models.IntegerField(db_column='CreatedByUserID')),
                ('createdondate', models.DateTimeField(db_column='CreatedOnDate')),
                ('lastmodifiedbyuserid', models.IntegerField(db_column='LastModifiedByUserID')),
                ('lastmodifiedondate', models.DateTimeField(db_column='LastModifiedOnDate')),
            ],
            options={
                'db_table': 'UserRelationships',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userroles',
            fields=[
                ('userroleid', models.AutoField(db_column='UserRoleID', primary_key=True, serialize=False)),
                ('expirydate', models.DateTimeField(blank=True, db_column='ExpiryDate', null=True)),
                ('istrialused', models.NullBooleanField(db_column='IsTrialUsed')),
                ('effectivedate', models.DateTimeField(blank=True, db_column='EffectiveDate', null=True)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
                ('status', models.IntegerField(db_column='Status')),
                ('isowner', models.BooleanField(db_column='IsOwner')),
            ],
            options={
                'db_table': 'UserRoles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('userid', models.AutoField(db_column='UserID', primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='Username', max_length=100, unique=True)),
                ('firstname', models.CharField(db_column='FirstName', max_length=50)),
                ('lastname', models.CharField(db_column='LastName', max_length=50)),
                ('issuperuser', models.BooleanField(db_column='IsSuperUser')),
                ('affiliateid', models.IntegerField(blank=True, db_column='AffiliateId', null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=256, null=True)),
                ('displayname', models.CharField(db_column='DisplayName', max_length=128)),
                ('updatepassword', models.BooleanField(db_column='UpdatePassword')),
                ('lastipaddress', models.CharField(blank=True, db_column='LastIPAddress', max_length=50, null=True)),
                ('isdeleted', models.BooleanField(db_column='IsDeleted')),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
                ('passwordresettoken', models.CharField(blank=True, db_column='PasswordResetToken', max_length=36, null=True)),
                ('passwordresetexpiration', models.DateTimeField(blank=True, db_column='PasswordResetExpiration', null=True)),
                ('loweremail', models.CharField(blank=True, db_column='LowerEmail', max_length=256, null=True)),
            ],
            options={
                'db_table': 'Users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vendorclassification',
            fields=[
                ('vendorclassificationid', models.AutoField(db_column='VendorClassificationId', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'VendorClassification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vendors',
            fields=[
                ('vendorid', models.AutoField(db_column='VendorId', primary_key=True, serialize=False)),
                ('vendorname', models.CharField(db_column='VendorName', max_length=50)),
                ('street', models.CharField(blank=True, db_column='Street', max_length=50, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=50, null=True)),
                ('region', models.CharField(blank=True, db_column='Region', max_length=50, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=50, null=True)),
                ('postalcode', models.CharField(blank=True, db_column='PostalCode', max_length=50, null=True)),
                ('telephone', models.CharField(blank=True, db_column='Telephone', max_length=50, null=True)),
                ('fax', models.CharField(blank=True, db_column='Fax', max_length=50, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=50, null=True)),
                ('website', models.CharField(blank=True, db_column='Website', max_length=100, null=True)),
                ('clickthroughs', models.IntegerField(db_column='ClickThroughs')),
                ('views', models.IntegerField(db_column='Views')),
                ('createdbyuser', models.CharField(blank=True, db_column='CreatedByUser', max_length=100, null=True)),
                ('createddate', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('logofile', models.CharField(blank=True, db_column='LogoFile', max_length=100, null=True)),
                ('keywords', models.TextField(blank=True, db_column='KeyWords', null=True)),
                ('unit', models.CharField(blank=True, db_column='Unit', max_length=50, null=True)),
                ('authorized', models.BooleanField(db_column='Authorized')),
                ('firstname', models.CharField(blank=True, db_column='FirstName', max_length=50, null=True)),
                ('lastname', models.CharField(blank=True, db_column='LastName', max_length=50, null=True)),
                ('cell', models.CharField(blank=True, db_column='Cell', max_length=50, null=True)),
            ],
            options={
                'db_table': 'Vendors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Version',
            fields=[
                ('versionid', models.AutoField(db_column='VersionId', primary_key=True, serialize=False)),
                ('major', models.IntegerField(db_column='Major')),
                ('minor', models.IntegerField(db_column='Minor')),
                ('build', models.IntegerField(db_column='Build')),
                ('name', models.CharField(blank=True, db_column='Name', max_length=50, null=True)),
                ('createddate', models.DateTimeField(db_column='CreatedDate')),
                ('increment', models.IntegerField(blank=True, db_column='Increment', null=True)),
            ],
            options={
                'db_table': 'Version',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Webservers',
            fields=[
                ('serverid', models.AutoField(db_column='ServerID', primary_key=True, serialize=False)),
                ('servername', models.CharField(db_column='ServerName', max_length=50)),
                ('createddate', models.DateTimeField(db_column='CreatedDate')),
                ('lastactivitydate', models.DateTimeField(db_column='LastActivityDate')),
                ('url', models.CharField(blank=True, db_column='URL', max_length=255, null=True)),
                ('iisappname', models.CharField(db_column='IISAppName', max_length=200)),
                ('enabled', models.BooleanField(db_column='Enabled')),
                ('servergroup', models.CharField(blank=True, db_column='ServerGroup', max_length=200, null=True)),
                ('uniqueid', models.CharField(blank=True, db_column='UniqueId', max_length=200, null=True)),
                ('pingfailurecount', models.IntegerField(db_column='PingFailureCount')),
            ],
            options={
                'db_table': 'WebServers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('workflowid', models.AutoField(db_column='WorkflowID', primary_key=True, serialize=False)),
                ('portalid', models.IntegerField(blank=True, db_column='PortalID', null=True)),
                ('workflowname', models.CharField(db_column='WorkflowName', max_length=50)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=2000, null=True)),
                ('isdeleted', models.BooleanField(db_column='IsDeleted')),
            ],
            options={
                'db_table': 'Workflow',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Workflowmigrationmatches',
            fields=[
                ('portalid', models.IntegerField(db_column='PortalID', primary_key=True, serialize=False)),
                ('oldworkflowid', models.IntegerField(db_column='OldWorkflowID')),
                ('newworkflowid', models.IntegerField(db_column='NewWorkflowID')),
            ],
            options={
                'db_table': 'WorkflowMigrationMatches',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Workflowstatepermission',
            fields=[
                ('workflowstatepermissionid', models.AutoField(db_column='WorkflowStatePermissionID', primary_key=True, serialize=False)),
                ('allowaccess', models.BooleanField(db_column='AllowAccess')),
                ('roleid', models.IntegerField(blank=True, db_column='RoleID', null=True)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'WorkflowStatePermission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Workflowstates',
            fields=[
                ('stateid', models.AutoField(db_column='StateID', primary_key=True, serialize=False)),
                ('statename', models.CharField(db_column='StateName', max_length=50)),
                ('order', models.IntegerField(db_column='Order')),
                ('isactive', models.BooleanField(db_column='IsActive')),
                ('notify', models.BooleanField(db_column='Notify')),
                ('notifyadmin', models.BooleanField(db_column='NotifyAdmin')),
            ],
            options={
                'db_table': 'WorkflowStates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AspnetMembership',
            fields=[
                ('userid', models.OneToOneField(db_column='UserId', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dnninternet.AspnetUsers')),
                ('password', models.CharField(db_column='Password', max_length=128)),
                ('passwordformat', models.IntegerField(db_column='PasswordFormat')),
                ('passwordsalt', models.CharField(db_column='PasswordSalt', max_length=128)),
                ('mobilepin', models.CharField(blank=True, db_column='MobilePIN', max_length=16, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=256, null=True)),
                ('loweredemail', models.CharField(blank=True, db_column='LoweredEmail', max_length=256, null=True)),
                ('passwordquestion', models.CharField(blank=True, db_column='PasswordQuestion', max_length=256, null=True)),
                ('passwordanswer', models.CharField(blank=True, db_column='PasswordAnswer', max_length=128, null=True)),
                ('isapproved', models.BooleanField(db_column='IsApproved')),
                ('islockedout', models.BooleanField(db_column='IsLockedOut')),
                ('createdate', models.DateTimeField(db_column='CreateDate')),
                ('lastlogindate', models.DateTimeField(db_column='LastLoginDate')),
                ('lastpasswordchangeddate', models.DateTimeField(db_column='LastPasswordChangedDate')),
                ('lastlockoutdate', models.DateTimeField(db_column='LastLockoutDate')),
                ('failedpasswordattemptcount', models.IntegerField(db_column='FailedPasswordAttemptCount')),
                ('failedpasswordattemptwindowstart', models.DateTimeField(db_column='FailedPasswordAttemptWindowStart')),
                ('failedpasswordanswerattemptcount', models.IntegerField(db_column='FailedPasswordAnswerAttemptCount')),
                ('failedpasswordanswerattemptwindowstart', models.DateTimeField(db_column='FailedPasswordAnswerAttemptWindowStart')),
                ('comment', models.TextField(blank=True, db_column='Comment', null=True)),
            ],
            options={
                'db_table': 'aspnet_Membership',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentitemSlug',
            fields=[
                ('tabid', models.OneToOneField(db_column='TabId', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dnninternet.Tabs')),
                ('httpstatus', models.IntegerField(db_column='HttpStatus')),
                ('slug', models.CharField(db_column='Slug', max_length=255)),
            ],
            options={
                'db_table': 'ContentItem_Slug',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentlayoutVersions',
            fields=[
                ('moduleid', models.OneToOneField(db_column='ModuleId', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dnninternet.Modules')),
                ('version', models.IntegerField(db_column='Version')),
                ('columnsizes', models.CharField(db_column='ColumnSizes', max_length=50)),
                ('columncssclasses', models.CharField(db_column='ColumnCssClasses', max_length=256)),
                ('arecustomcolumnsizes', models.BooleanField(db_column='AreCustomColumnSizes')),
                ('ispublished', models.BooleanField(db_column='IsPublished')),
                ('createdondate', models.DateTimeField(db_column='CreatedOnDate')),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'ContentLayout_Versions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentpersonalizationPersonalizedtabs',
            fields=[
                ('tabid', models.OneToOneField(db_column='TabId', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dnninternet.Tabs')),
                ('portalid', models.IntegerField(db_column='PortalId')),
                ('originaltabid', models.IntegerField(db_column='OriginalTabId')),
                ('name', models.CharField(db_column='Name', max_length=256)),
                ('priority', models.IntegerField(db_column='Priority')),
                ('rules', models.TextField(db_column='Rules')),
            ],
            options={
                'db_table': 'ContentPersonalization_PersonalizedTabs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Documentssettings',
            fields=[
                ('moduleid', models.OneToOneField(db_column='ModuleID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dnninternet.Modules')),
                ('showtitlelink', models.NullBooleanField(db_column='ShowTitleLink')),
                ('sortorder', models.CharField(blank=True, db_column='SortOrder', max_length=2000, null=True)),
                ('displaycolumns', models.CharField(blank=True, db_column='DisplayColumns', max_length=2000, null=True)),
                ('usecategorieslist', models.NullBooleanField(db_column='UseCategoriesList')),
                ('defaultfolder', models.CharField(blank=True, db_column='DefaultFolder', max_length=2000, null=True)),
                ('categorieslistname', models.CharField(blank=True, db_column='CategoriesListName', max_length=50, null=True)),
                ('allowusersort', models.NullBooleanField(db_column='AllowUserSort')),
            ],
            options={
                'db_table': 'DocumentsSettings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Exceptionevents',
            fields=[
                ('logeventid', models.OneToOneField(db_column='LogEventID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dnninternet.Eventlog')),
                ('assemblyversion', models.CharField(db_column='AssemblyVersion', max_length=20)),
                ('portalid', models.IntegerField(blank=True, db_column='PortalId', null=True)),
                ('userid', models.IntegerField(blank=True, db_column='UserId', null=True)),
                ('tabid', models.IntegerField(blank=True, db_column='TabId', null=True)),
                ('rawurl', models.CharField(blank=True, db_column='RawUrl', max_length=260, null=True)),
                ('referrer', models.CharField(blank=True, db_column='Referrer', max_length=260, null=True)),
                ('useragent', models.CharField(blank=True, db_column='UserAgent', max_length=260, null=True)),
            ],
            options={
                'db_table': 'ExceptionEvents',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fileversions',
            fields=[
                ('fileid', models.OneToOneField(db_column='FileId', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dnninternet.Files')),
                ('version', models.IntegerField(db_column='Version')),
                ('filename', models.CharField(db_column='FileName', max_length=246)),
                ('extension', models.CharField(db_column='Extension', max_length=100)),
                ('size', models.IntegerField(db_column='Size')),
                ('width', models.IntegerField(blank=True, db_column='Width', null=True)),
                ('height', models.IntegerField(blank=True, db_column='Height', null=True)),
                ('contenttype', models.CharField(db_column='ContentType', max_length=200)),
                ('content', models.BinaryField(blank=True, db_column='Content', null=True)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
                ('sha1hash', models.CharField(blank=True, db_column='SHA1Hash', max_length=40, null=True)),
            ],
            options={
                'db_table': 'FileVersions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Foldermappingssettings',
            fields=[
                ('foldermappingid', models.OneToOneField(db_column='FolderMappingID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dnninternet.Foldermappings')),
                ('settingname', models.CharField(db_column='SettingName', max_length=50)),
                ('settingvalue', models.CharField(db_column='SettingValue', max_length=2000)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'FolderMappingsSettings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Modulesettings',
            fields=[
                ('moduleid', models.OneToOneField(db_column='ModuleID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dnninternet.Modules')),
                ('settingname', models.CharField(db_column='SettingName', max_length=50)),
                ('settingvalue', models.TextField(db_column='SettingValue')),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'ModuleSettings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Portallocalization',
            fields=[
                ('portalid', models.OneToOneField(db_column='PortalID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dnninternet.Portals')),
                ('culturecode', models.CharField(db_column='CultureCode', max_length=10)),
                ('portalname', models.CharField(db_column='PortalName', max_length=128)),
                ('logofile', models.CharField(blank=True, db_column='LogoFile', max_length=50, null=True)),
                ('footertext', models.CharField(blank=True, db_column='FooterText', max_length=100, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=500, null=True)),
                ('keywords', models.CharField(blank=True, db_column='KeyWords', max_length=500, null=True)),
                ('backgroundfile', models.CharField(blank=True, db_column='BackgroundFile', max_length=50, null=True)),
                ('hometabid', models.IntegerField(blank=True, db_column='HomeTabId', null=True)),
                ('logintabid', models.IntegerField(blank=True, db_column='LoginTabId', null=True)),
                ('usertabid', models.IntegerField(blank=True, db_column='UserTabId', null=True)),
                ('admintabid', models.IntegerField(blank=True, db_column='AdminTabId', null=True)),
                ('splashtabid', models.IntegerField(blank=True, db_column='SplashTabId', null=True)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
                ('registertabid', models.IntegerField(blank=True, db_column='RegisterTabId', null=True)),
                ('searchtabid', models.IntegerField(blank=True, db_column='SearchTabId', null=True)),
                ('custom404tabid', models.IntegerField(blank=True, db_column='Custom404TabId', null=True)),
                ('custom500tabid', models.IntegerField(blank=True, db_column='Custom500TabId', null=True)),
            ],
            options={
                'db_table': 'PortalLocalization',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Scheduleitemsettings',
            fields=[
                ('scheduleid', models.OneToOneField(db_column='ScheduleID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dnninternet.Schedule')),
                ('settingname', models.CharField(db_column='SettingName', max_length=50)),
                ('settingvalue', models.TextField(db_column='SettingValue')),
            ],
            options={
                'db_table': 'ScheduleItemSettings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tabmodulesettings',
            fields=[
                ('tabmoduleid', models.OneToOneField(db_column='TabModuleID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dnninternet.Tabmodules')),
                ('settingname', models.CharField(db_column='SettingName', max_length=50)),
                ('settingvalue', models.TextField(db_column='SettingValue')),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'TabModuleSettings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tabsettings',
            fields=[
                ('tabid', models.OneToOneField(db_column='TabID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dnninternet.Tabs')),
                ('settingname', models.CharField(db_column='SettingName', max_length=50)),
                ('settingvalue', models.CharField(db_column='SettingValue', max_length=2000)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'TabSettings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Taburls',
            fields=[
                ('tabid', models.OneToOneField(db_column='TabId', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dnninternet.Tabs')),
                ('seqnum', models.IntegerField(db_column='SeqNum')),
                ('url', models.CharField(db_column='Url', max_length=200)),
                ('querystring', models.CharField(blank=True, db_column='QueryString', max_length=200, null=True)),
                ('httpstatus', models.CharField(db_column='HttpStatus', max_length=50)),
                ('culturecode', models.CharField(blank=True, db_column='CultureCode', max_length=50, null=True)),
                ('issystem', models.BooleanField(db_column='IsSystem')),
                ('portalaliasid', models.IntegerField(blank=True, db_column='PortalAliasId', null=True)),
                ('portalaliasusage', models.IntegerField(blank=True, db_column='PortalAliasUsage', null=True)),
                ('createdbyuserid', models.IntegerField(blank=True, db_column='CreatedByUserID', null=True)),
                ('createdondate', models.DateTimeField(blank=True, db_column='CreatedOnDate', null=True)),
                ('lastmodifiedbyuserid', models.IntegerField(blank=True, db_column='LastModifiedByUserID', null=True)),
                ('lastmodifiedondate', models.DateTimeField(blank=True, db_column='LastModifiedOnDate', null=True)),
            ],
            options={
                'db_table': 'TabUrls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userdefineddata',
            fields=[
                ('userdefinedfieldid', models.OneToOneField(db_column='UserDefinedFieldId', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dnninternet.Userdefinedfields')),
                ('fieldvalue', models.TextField(blank=True, db_column='FieldValue', null=True)),
            ],
            options={
                'db_table': 'UserDefinedData',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userdefinedfieldsettings',
            fields=[
                ('fieldid', models.OneToOneField(db_column='FieldId', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dnninternet.Userdefinedfields')),
                ('settingname', models.CharField(db_column='SettingName', max_length=50)),
                ('settingvalue', models.TextField(blank=True, db_column='SettingValue', null=True)),
            ],
            options={
                'db_table': 'UserDefinedFieldSettings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usersonline',
            fields=[
                ('userid', models.OneToOneField(db_column='UserID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dnninternet.Users')),
                ('tabid', models.IntegerField(db_column='TabID')),
                ('creationdate', models.DateTimeField(db_column='CreationDate')),
                ('lastactivedate', models.DateTimeField(db_column='LastActiveDate')),
            ],
            options={
                'db_table': 'UsersOnline',
                'managed': False,
            },
        ),
    ]
